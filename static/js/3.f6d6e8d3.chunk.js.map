{"version":3,"sources":["../node_modules/react-progressive-bg-image/node_modules/rxjs/Observable.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/Subscriber.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/util/root.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/observable/ArrayObservable.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/util/isScheduler.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/OuterSubscriber.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/util/subscribeToResult.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/observable/merge.js","../node_modules/recompose/setDisplayName.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/util/isArray.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/util/errorObject.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/symbol/observable.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/scheduler/async.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/observable/ScalarObservable.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/observable/EmptyObservable.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/symbol/iterator.js","../node_modules/recompose/setStatic.js","../node_modules/recompose/wrapDisplayName.js","../node_modules/symbol-observable/es/index.js","../node_modules/webpack/buildin/global.js","../node_modules/recompose/setObservableConfig.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/util/isFunction.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/Subscription.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/util/isObject.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/util/tryCatch.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/Observer.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/symbol/rxSubscriber.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/util/isArrayLike.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/util/isPromise.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/observable/of.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/observable/from.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/Notification.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/operators/mergeAll.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/util/identity.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/operators/switchMap.js","../node_modules/ramda/src/internal/_isPlaceholder.js","../node_modules/invariant/browser.js","../node_modules/json2mq/index.js","../node_modules/string-convert/camel2hyphen.js","../node_modules/react-progressive-bg-image/lib/index.js","../node_modules/react-progressive-bg-image/lib/ProgressiveImage.js","../node_modules/recompose/compose.js","../node_modules/recompose/defaultProps.js","../node_modules/recompose/getDisplayName.js","../node_modules/recompose/setPropTypes.js","../node_modules/recompose/mapPropsStream.js","../node_modules/webpack/buildin/harmony-module.js","../node_modules/symbol-observable/es/ponyfill.js","../node_modules/recompose/componentFromStream.js","../node_modules/change-emitter/lib/index.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/util/toSubscriber.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/util/UnsubscriptionError.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/util/pipe.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/util/noop.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/scheduler/AsyncAction.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/scheduler/Action.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/scheduler/AsyncScheduler.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/Scheduler.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/add/operator/combineLatest.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/operator/combineLatest.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/operators/combineLatest.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/InnerSubscriber.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/add/operator/startWith.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/operator/startWith.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/operators/startWith.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/observable/concat.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/observable/FromObservable.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/observable/PromiseObservable.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/observable/IteratorObservable.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/observable/ArrayLikeObservable.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/operators/observeOn.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/operators/concatAll.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/operators/mergeMap.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/add/operator/switchMapTo.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/operator/switchMapTo.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/operators/switchMapTo.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/add/operator/delay.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/operator/delay.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/operators/delay.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/util/isDate.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/add/operator/merge.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/operator/merge.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/operators/merge.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/add/operator/filter.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/operator/filter.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/operators/filter.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/add/operator/switchMap.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/operator/switchMap.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/add/operator/mapTo.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/operator/mapTo.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/operators/mapTo.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/add/operator/switch.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/operator/switch.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/operators/switchAll.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/add/operator/map.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/operator/map.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/operators/map.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/add/operator/distinctUntilChanged.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/operator/distinctUntilChanged.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/operators/distinctUntilChanged.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/add/observable/from.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/add/observable/of.js","../node_modules/react-progressive-bg-image/node_modules/rxjs/add/observable/merge.js","../node_modules/react-progressive-bg-image/lib/Img.js","../node_modules/ramda/src/omit.js","../node_modules/ramda/src/internal/_curry2.js","../node_modules/ramda/src/internal/_curry1.js","../node_modules/react-progressive-bg-image/lib/loadImage.js","../node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/react-media/esm/react-media.js","../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js"],"names":["root_1","toSubscriber_1","observable_1","pipe_1","Observable","subscribe","this","_isScalar","_subscribe","prototype","lift","operator","observable","source","observerOrNext","error","complete","sink","toSubscriber","call","add","syncErrorThrowable","_trySubscribe","syncErrorThrown","syncErrorValue","err","forEach","next","PromiseCtor","_this","root","Rx","config","Promise","Error","resolve","reject","subscription","value","unsubscribe","subscriber","pipe","operations","_i","arguments","length","pipeFromArray","toPromise","x","create","exports","__extends","d","b","p","hasOwnProperty","__","constructor","Object","isFunction_1","Subscription_1","Observer_1","rxSubscriber_1","Subscriber","_super","destinationOrNext","isStopped","destination","empty","isTrustedSubscriber","trustedSubscriber","rxSubscriber","SafeSubscriber","_next","_error","_complete","closed","_unsubscribeAndRecycle","_parent","_parents","Subscription","_parentSubscriber","context","isFunction","bind","_context","__tryOrSetError","__tryOrUnsub","wrappedComplete","fn","parent","_unsubscribe","obj","__window","window","__self","self","WorkerGlobalScope","_root","global","Observable_1","ScalarObservable_1","EmptyObservable_1","isScheduler_1","ArrayObservable","array","scheduler","of","isScheduler","pop","len","ScalarObservable","EmptyObservable","dispatch","state","index","count","schedule","i","OuterSubscriber","apply","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","notifyError","notifyComplete","isArrayLike_1","isPromise_1","isObject_1","iterator_1","InnerSubscriber_1","subscribeToResult","outerSubscriber","result","InnerSubscriber","isArrayLike","isPromise","then","setTimeout","iterator","item","done","obs","TypeError","msg","isObject","ArrayObservable_1","mergeAll_1","merge","observables","concurrent","Number","POSITIVE_INFINITY","last","mergeAll","__esModule","_setStatic","_setStatic2","default","displayName","isArray","Array","errorObject","e","getSymbolObservable","$$observable","Symbol","AsyncAction_1","AsyncScheduler_1","async","AsyncScheduler","AsyncAction","arg","symbolIteratorPonyfill","Set_1","Set","Map_1","Map","keys","getOwnPropertyNames","key","$$iterator","BaseComponent","_getDisplayName","_getDisplayName2","hocName","module","g","Function","_config","fromESObservable","toESObservable","stream","c","isArray_1","tryCatch_1","errorObject_1","UnsubscriptionError_1","_subscriptions","errors","hasErrors","remove","tryCatch","UnsubscriptionError","flattenUnsubscriptionErrors","sub","concat","push","teardown","EMPTY","_addParent","tmp","subscriptions","subscriptionIndex","indexOf","splice","reduce","errs","tryCatchTarget","tryCatcher","for","$$rxSubscriber","FromObservable_1","from","FromObservable","Notification","kind","hasValue","observe","observer","do","accept","nextOrObserver","toObservable","throw","createNext","undefinedValueNotification","createError","undefined","createComplete","completeNotification","mergeMap_1","identity_1","mergeMap","identity","OuterSubscriber_1","subscribeToResult_1","switchMap","project","resultSelector","SwitchMapOperator","SwitchMapSubscriber","_innerSub","innerSubscription","_tryNotifyNext","a","condition","format","f","args","argIndex","replace","name","framesToPop","camel2hyphen","obj2mq","mq","features","feature","test","isDimension","query","q","str","match","toLowerCase","defineProperty","_ProgressiveImage","_ProgressiveImage2","DELAY","ownerPropsToChildProps","_propTypes2","_interopRequireDefault","_compose2","_setDisplayName2","_defaultProps2","_setPropTypes2","_mapPropsStream2","_Observable","_async","_Img2","_loadImage2","propStream","load","t","props$","placeholder$","map","placeholder","imagePromise$","src","startWith","isCached","src$","filter","isCached$","distinctUntilChanged","isLoaded$","mapTo","_ref","delay","switch","image$","combineLatest","props","image","isLoaded","assign","string","isRequired","opacity","number","blur","scale","component","oneOfType","func","transition","_len","funcs","_key","_react","factory","createFactory","DefaultProps","ownerProps","defaultProps","Component","propTypes","mapPropsStreamWithConfig","_symbolObservable2","_componentFromStream","_setObservableConfig","componentFromStream","componentFromStreamWithConfig","transform","childProps","originalModule","webpackPolyfill","children","enumerable","get","l","symbolObservablePonyfill","_changeEmitter","_symbolObservable","_classCallCheck","instance","Constructor","_possibleConstructorReturn","ReferenceError","propsToVdom","_Component","ComponentFromStream","_config$fromESObserva","_temp","vdom","propsEmitter","createChangeEmitter","listen","vdom$","subClass","superClass","writable","configurable","setPrototypeOf","__proto__","_inherits","componentWillMount","_this2","setState","emit","componentWillReceiveProps","nextProps","shouldComponentUpdate","nextState","componentWillUnmount","render","currentListeners","nextListeners","ensureCanMutateNextListeners","slice","listener","isSubscribed","listeners","Subscriber_1","toString","join","stack","message","noop_1","fns","input","prev","noop","work","pending","id","recycleAsyncId","requestAsyncId","setInterval","flush","clearInterval","execute","_execute","errored","errorValue","actions","Action","active","scheduled","action","shift","Scheduler","SchedulerAction","now","Date","combineLatest_1","none","CombineLatestOperator","CombineLatestSubscriber","values","toRespond","unused","oldVal","_tryProject","startWith_1","concat_1","of_1","from_1","concatAll_1","concatAll","PromiseObservable_1","IteratorObservable_1","ArrayLikeObservable_1","observeOn_1","ish","PromiseObservable","IteratorObservable","ArrayLikeObservable","ObserveOnSubscriber","promise","dispatchNext","dispatchError","StringIterator","ArrayIterator","getIterator","hasError","return","idx","charAt","arr","o","isNaN","isFinite","valueAsNumber","sign","Math","floor","abs","maxSafeInteger","toLength","pow","arrayLike","Notification_1","observeOn","ObserveOnOperator","notification","scheduleMessage","ObserveOnMessage","MergeMapOperator","MergeMapSubscriber","hasCompleted","buffer","_tryNext","_notifyResultSelector","switchMapTo_1","switchMapTo","innerObservable","SwitchMapToOperator","SwitchMapToSubscriber","inner","tryResultSelector","delay_1","async_1","isDate_1","delayFor","isDate","DelayOperator","DelaySubscriber","queue","time","max","_schedule","scheduleNotification","DelayMessage","merge_1","merge_2","mergeStatic","filter_1","predicate","thisArg","FilterOperator","FilterSubscriber","switchMap_1","mapTo_1","MapToOperator","MapToSubscriber","switch_1","_switch","switchAll_1","switchAll","map_1","MapOperator","MapSubscriber","distinctUntilChanged_1","compare","keySelector","DistinctUntilChangedOperator","DistinctUntilChangedSubscriber","hasKey","y","Boolean","strings","raw","_templateObject","freeze","defineProperties","React","newObj","_interopRequireWildcard","_omit2","_styledComponents2","_objectWithoutProperties","target","omitProps","otherProps","createElement","node","StyledImg","Img","_ref2","style","backgroundImage","bool","className","object","omit","_curry2","names","prop","_curry1","_isPlaceholder","f2","_b","_a","f1","Image","width","height","onload","onerror","_extends","_assertThisInitialized","_defineProperty","MediaQueryListener","targetWindow","nativeMediaQueryList","matchMedia","cancellableListener","matches","addListener","cancel","removeListener","queryType","arrayOf","_React$Component","Media","queryObject","queryNames","__DEFAULT__","unwrapSingleQuery","queries","acc","_extends2","mqListener","newMatches","getMatches","onChange","defaultMatches","_extends3","initialize","_proto","qs","updateMatches","componentDidMount","_this$props","isAnyMatches","some","Children","only","type","cloneElement","objectOf"],"mappings":"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","file":"static/js/3.f6d6e8d3.chunk.js","sourcesContent":["\"use strict\";\n\nvar root_1 = require('./util/root');\n\nvar toSubscriber_1 = require('./util/toSubscriber');\n\nvar observable_1 = require('./symbol/observable');\n\nvar pipe_1 = require('./util/pipe');\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\n\n\nvar Observable = function () {\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  function Observable(subscribe) {\n    this._isScalar = false;\n\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n  /**\n   * Creates a new Observable, with this Observable as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param {Operator} operator the operator defining the operation to take on the observable\n   * @return {Observable} a new observable with the Operator applied\n   */\n\n\n  Observable.prototype.lift = function (operator) {\n    var observable = new Observable();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  };\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to a {@link create} static factory, but most of the time it is\n   * a library implementation, which defines what and when will be emitted by an Observable. This means that calling\n   * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will\n   * be left uncaught.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent\n   * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,\n   * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n   *\n   * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.\n   *\n   * @example <caption>Subscribe with an Observer</caption>\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() { // We actually could just remove this method,\n   *   },        // since we do not really care about errors right now.\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   * .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   *\n   *\n   * @example <caption>Subscribe with functions</caption>\n   * let sum = 0;\n   *\n   * Rx.Observable.of(1, 2, 3)\n   * .subscribe(\n   *   function(value) {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   function() {\n   *     console.log('Sum equals: ' + sum);\n   *   }\n   * );\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   *\n   *\n   * @example <caption>Cancel a subscription</caption>\n   * const subscription = Rx.Observable.interval(1000).subscribe(\n   *   num => console.log(num),\n   *   undefined,\n   *   () => console.log('completed!') // Will not be called, even\n   * );                                // when cancelling subscription\n   *\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // \"unsubscribed!\" after 2.5s\n   *\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   *  Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   *  the error will be thrown as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {ISubscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n\n\n  Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n    var operator = this.operator;\n    var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n\n    if (operator) {\n      operator.call(sink, this.source);\n    } else {\n      sink.add(this.source || !sink.syncErrorThrowable ? this._subscribe(sink) : this._trySubscribe(sink));\n    }\n\n    if (sink.syncErrorThrowable) {\n      sink.syncErrorThrowable = false;\n\n      if (sink.syncErrorThrown) {\n        throw sink.syncErrorValue;\n      }\n    }\n\n    return sink;\n  };\n\n  Observable.prototype._trySubscribe = function (sink) {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      sink.syncErrorThrown = true;\n      sink.syncErrorValue = err;\n      sink.error(err);\n    }\n  };\n  /**\n   * @method forEach\n   * @param {Function} next a handler for each value emitted by the observable\n   * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n   * @return {Promise} a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n\n\n  Observable.prototype.forEach = function (next, PromiseCtor) {\n    var _this = this;\n\n    if (!PromiseCtor) {\n      if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n        PromiseCtor = root_1.root.Rx.config.Promise;\n      } else if (root_1.root.Promise) {\n        PromiseCtor = root_1.root.Promise;\n      }\n    }\n\n    if (!PromiseCtor) {\n      throw new Error('no Promise impl found');\n    }\n\n    return new PromiseCtor(function (resolve, reject) {\n      // Must be declared in a separate statement to avoid a RefernceError when\n      // accessing subscription below in the closure due to Temporal Dead Zone.\n      var subscription;\n      subscription = _this.subscribe(function (value) {\n        if (subscription) {\n          // if there is a subscription, then we can surmise\n          // the next handling is asynchronous. Any errors thrown\n          // need to be rejected explicitly and unsubscribe must be\n          // called manually\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscription.unsubscribe();\n          }\n        } else {\n          // if there is NO subscription, then we're getting a nexted\n          // value synchronously during subscription. We can just call it.\n          // If it errors, Observable's `subscribe` will ensure the\n          // unsubscription logic is called, then synchronously rethrow the error.\n          // After that, Promise will trap the error and send it\n          // down the rejection path.\n          next(value);\n        }\n      }, reject, resolve);\n    });\n  };\n  /** @deprecated internal use only */\n\n\n  Observable.prototype._subscribe = function (subscriber) {\n    return this.source.subscribe(subscriber);\n  };\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n\n\n  Observable.prototype[observable_1.observable] = function () {\n    return this;\n  };\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * @example\n   *\n   * import { map, filter, scan } from 'rxjs/operators';\n   *\n   * Rx.Observable.interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x))\n   */\n\n\n  Observable.prototype.pipe = function () {\n    var operations = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      operations[_i - 0] = arguments[_i];\n    }\n\n    if (operations.length === 0) {\n      return this;\n    }\n\n    return pipe_1.pipeFromArray(operations)(this);\n  };\n  /* tslint:enable:max-line-length */\n\n\n  Observable.prototype.toPromise = function (PromiseCtor) {\n    var _this = this;\n\n    if (!PromiseCtor) {\n      if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n        PromiseCtor = root_1.root.Rx.config.Promise;\n      } else if (root_1.root.Promise) {\n        PromiseCtor = root_1.root.Promise;\n      }\n    }\n\n    if (!PromiseCtor) {\n      throw new Error('no Promise impl found');\n    }\n\n    return new PromiseCtor(function (resolve, reject) {\n      var value;\n\n      _this.subscribe(function (x) {\n        return value = x;\n      }, function (err) {\n        return reject(err);\n      }, function () {\n        return resolve(value);\n      });\n    });\n  }; // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n\n  /**\n   * Creates a new cold Observable by calling the Observable constructor\n   * @static true\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new cold observable\n   */\n\n\n  Observable.create = function (subscribe) {\n    return new Observable(subscribe);\n  };\n\n  return Observable;\n}();\n\nexports.Observable = Observable;","\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) {\n    if (b.hasOwnProperty(p)) d[p] = b[p];\n  }\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar isFunction_1 = require('./util/isFunction');\n\nvar Subscription_1 = require('./Subscription');\n\nvar Observer_1 = require('./Observer');\n\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\n\n\nvar Subscriber = function (_super) {\n  __extends(Subscriber, _super);\n  /**\n   * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n   * defined Observer or a `next` callback function.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   */\n\n\n  function Subscriber(destinationOrNext, error, complete) {\n    _super.call(this);\n\n    this.syncErrorValue = null;\n    this.syncErrorThrown = false;\n    this.syncErrorThrowable = false;\n    this.isStopped = false;\n\n    switch (arguments.length) {\n      case 0:\n        this.destination = Observer_1.empty;\n        break;\n\n      case 1:\n        if (!destinationOrNext) {\n          this.destination = Observer_1.empty;\n          break;\n        }\n\n        if (typeof destinationOrNext === 'object') {\n          // HACK(benlesh): To resolve an issue where Node users may have multiple\n          // copies of rxjs in their node_modules directory.\n          if (isTrustedSubscriber(destinationOrNext)) {\n            var trustedSubscriber = destinationOrNext[rxSubscriber_1.rxSubscriber]();\n            this.syncErrorThrowable = trustedSubscriber.syncErrorThrowable;\n            this.destination = trustedSubscriber;\n            trustedSubscriber.add(this);\n          } else {\n            this.syncErrorThrowable = true;\n            this.destination = new SafeSubscriber(this, destinationOrNext);\n          }\n\n          break;\n        }\n\n      default:\n        this.syncErrorThrowable = true;\n        this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n        break;\n    }\n  }\n\n  Subscriber.prototype[rxSubscriber_1.rxSubscriber] = function () {\n    return this;\n  };\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   */\n\n\n  Subscriber.create = function (next, error, complete) {\n    var subscriber = new Subscriber(next, error, complete);\n    subscriber.syncErrorThrowable = false;\n    return subscriber;\n  };\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n\n\n  Subscriber.prototype.next = function (value) {\n    if (!this.isStopped) {\n      this._next(value);\n    }\n  };\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached {@link Error}. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n\n\n  Subscriber.prototype.error = function (err) {\n    if (!this.isStopped) {\n      this.isStopped = true;\n\n      this._error(err);\n    }\n  };\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n\n\n  Subscriber.prototype.complete = function () {\n    if (!this.isStopped) {\n      this.isStopped = true;\n\n      this._complete();\n    }\n  };\n\n  Subscriber.prototype.unsubscribe = function () {\n    if (this.closed) {\n      return;\n    }\n\n    this.isStopped = true;\n\n    _super.prototype.unsubscribe.call(this);\n  };\n\n  Subscriber.prototype._next = function (value) {\n    this.destination.next(value);\n  };\n\n  Subscriber.prototype._error = function (err) {\n    this.destination.error(err);\n    this.unsubscribe();\n  };\n\n  Subscriber.prototype._complete = function () {\n    this.destination.complete();\n    this.unsubscribe();\n  };\n  /** @deprecated internal use only */\n\n\n  Subscriber.prototype._unsubscribeAndRecycle = function () {\n    var _a = this,\n        _parent = _a._parent,\n        _parents = _a._parents;\n\n    this._parent = null;\n    this._parents = null;\n    this.unsubscribe();\n    this.closed = false;\n    this.isStopped = false;\n    this._parent = _parent;\n    this._parents = _parents;\n    return this;\n  };\n\n  return Subscriber;\n}(Subscription_1.Subscription);\n\nexports.Subscriber = Subscriber;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\nvar SafeSubscriber = function (_super) {\n  __extends(SafeSubscriber, _super);\n\n  function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n    _super.call(this);\n\n    this._parentSubscriber = _parentSubscriber;\n    var next;\n    var context = this;\n\n    if (isFunction_1.isFunction(observerOrNext)) {\n      next = observerOrNext;\n    } else if (observerOrNext) {\n      next = observerOrNext.next;\n      error = observerOrNext.error;\n      complete = observerOrNext.complete;\n\n      if (observerOrNext !== Observer_1.empty) {\n        context = Object.create(observerOrNext);\n\n        if (isFunction_1.isFunction(context.unsubscribe)) {\n          this.add(context.unsubscribe.bind(context));\n        }\n\n        context.unsubscribe = this.unsubscribe.bind(this);\n      }\n    }\n\n    this._context = context;\n    this._next = next;\n    this._error = error;\n    this._complete = complete;\n  }\n\n  SafeSubscriber.prototype.next = function (value) {\n    if (!this.isStopped && this._next) {\n      var _parentSubscriber = this._parentSubscriber;\n\n      if (!_parentSubscriber.syncErrorThrowable) {\n        this.__tryOrUnsub(this._next, value);\n      } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n        this.unsubscribe();\n      }\n    }\n  };\n\n  SafeSubscriber.prototype.error = function (err) {\n    if (!this.isStopped) {\n      var _parentSubscriber = this._parentSubscriber;\n\n      if (this._error) {\n        if (!_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(this._error, err);\n\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, this._error, err);\n\n          this.unsubscribe();\n        }\n      } else if (!_parentSubscriber.syncErrorThrowable) {\n        this.unsubscribe();\n        throw err;\n      } else {\n        _parentSubscriber.syncErrorValue = err;\n        _parentSubscriber.syncErrorThrown = true;\n        this.unsubscribe();\n      }\n    }\n  };\n\n  SafeSubscriber.prototype.complete = function () {\n    var _this = this;\n\n    if (!this.isStopped) {\n      var _parentSubscriber = this._parentSubscriber;\n\n      if (this._complete) {\n        var wrappedComplete = function wrappedComplete() {\n          return _this._complete.call(_this._context);\n        };\n\n        if (!_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(wrappedComplete);\n\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n\n          this.unsubscribe();\n        }\n      } else {\n        this.unsubscribe();\n      }\n    }\n  };\n\n  SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      this.unsubscribe();\n      throw err;\n    }\n  };\n\n  SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      parent.syncErrorValue = err;\n      parent.syncErrorThrown = true;\n      return true;\n    }\n\n    return false;\n  };\n  /** @deprecated internal use only */\n\n\n  SafeSubscriber.prototype._unsubscribe = function () {\n    var _parentSubscriber = this._parentSubscriber;\n    this._context = null;\n    this._parentSubscriber = null;\n\n    _parentSubscriber.unsubscribe();\n  };\n\n  return SafeSubscriber;\n}(Subscriber);\n\nfunction isTrustedSubscriber(obj) {\n  return obj instanceof Subscriber || 'syncErrorThrowable' in obj && obj[rxSubscriber_1.rxSubscriber];\n}","\"use strict\"; // CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\n\nvar __window = typeof window !== 'undefined' && window;\n\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope && self;\n\nvar __global = typeof global !== 'undefined' && global;\n\nvar _root = __window || __global || __self;\n\nexports.root = _root; // Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n\n(function () {\n  if (!_root) {\n    throw new Error('RxJS could not find any global context (window, self, global)');\n  }\n})();","\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) {\n    if (b.hasOwnProperty(p)) d[p] = b[p];\n  }\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar Observable_1 = require('../Observable');\n\nvar ScalarObservable_1 = require('./ScalarObservable');\n\nvar EmptyObservable_1 = require('./EmptyObservable');\n\nvar isScheduler_1 = require('../util/isScheduler');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\n\n\nvar ArrayObservable = function (_super) {\n  __extends(ArrayObservable, _super);\n\n  function ArrayObservable(array, scheduler) {\n    _super.call(this);\n\n    this.array = array;\n    this.scheduler = scheduler;\n\n    if (!scheduler && array.length === 1) {\n      this._isScalar = true;\n      this.value = array[0];\n    }\n  }\n\n  ArrayObservable.create = function (array, scheduler) {\n    return new ArrayObservable(array, scheduler);\n  };\n  /**\n   * Creates an Observable that emits some values you specify as arguments,\n   * immediately one after the other, and then emits a complete notification.\n   *\n   * <span class=\"informal\">Emits the arguments you provide, then completes.\n   * </span>\n   *\n   * <img src=\"./img/of.png\" width=\"100%\">\n   *\n   * This static operator is useful for creating a simple Observable that only\n   * emits the arguments given, and the complete notification thereafter. It can\n   * be used for composing with other Observables, such as with {@link concat}.\n   * By default, it uses a `null` IScheduler, which means the `next`\n   * notifications are sent synchronously, although with a different IScheduler\n   * it is possible to determine when those notifications will be delivered.\n   *\n   * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>\n   * var numbers = Rx.Observable.of(10, 20, 30);\n   * var letters = Rx.Observable.of('a', 'b', 'c');\n   * var interval = Rx.Observable.interval(1000);\n   * var result = numbers.concat(letters).concat(interval);\n   * result.subscribe(x => console.log(x));\n   *\n   * @see {@link create}\n   * @see {@link empty}\n   * @see {@link never}\n   * @see {@link throw}\n   *\n   * @param {...T} values Arguments that represent `next` values to be emitted.\n   * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n   * the emissions of the `next` notifications.\n   * @return {Observable<T>} An Observable that emits each given input value.\n   * @static true\n   * @name of\n   * @owner Observable\n   */\n\n\n  ArrayObservable.of = function () {\n    var array = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      array[_i - 0] = arguments[_i];\n    }\n\n    var scheduler = array[array.length - 1];\n\n    if (isScheduler_1.isScheduler(scheduler)) {\n      array.pop();\n    } else {\n      scheduler = null;\n    }\n\n    var len = array.length;\n\n    if (len > 1) {\n      return new ArrayObservable(array, scheduler);\n    } else if (len === 1) {\n      return new ScalarObservable_1.ScalarObservable(array[0], scheduler);\n    } else {\n      return new EmptyObservable_1.EmptyObservable(scheduler);\n    }\n  };\n\n  ArrayObservable.dispatch = function (state) {\n    var array = state.array,\n        index = state.index,\n        count = state.count,\n        subscriber = state.subscriber;\n\n    if (index >= count) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(array[index]);\n\n    if (subscriber.closed) {\n      return;\n    }\n\n    state.index = index + 1;\n    this.schedule(state);\n  };\n  /** @deprecated internal use only */\n\n\n  ArrayObservable.prototype._subscribe = function (subscriber) {\n    var index = 0;\n    var array = this.array;\n    var count = array.length;\n    var scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(ArrayObservable.dispatch, 0, {\n        array: array,\n        index: index,\n        count: count,\n        subscriber: subscriber\n      });\n    } else {\n      for (var i = 0; i < count && !subscriber.closed; i++) {\n        subscriber.next(array[i]);\n      }\n\n      subscriber.complete();\n    }\n  };\n\n  return ArrayObservable;\n}(Observable_1.Observable);\n\nexports.ArrayObservable = ArrayObservable;","\"use strict\";\n\nfunction isScheduler(value) {\n  return value && typeof value.schedule === 'function';\n}\n\nexports.isScheduler = isScheduler;","\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) {\n    if (b.hasOwnProperty(p)) d[p] = b[p];\n  }\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar Subscriber_1 = require('./Subscriber');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\n\nvar OuterSubscriber = function (_super) {\n  __extends(OuterSubscriber, _super);\n\n  function OuterSubscriber() {\n    _super.apply(this, arguments);\n  }\n\n  OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n    this.destination.next(innerValue);\n  };\n\n  OuterSubscriber.prototype.notifyError = function (error, innerSub) {\n    this.destination.error(error);\n  };\n\n  OuterSubscriber.prototype.notifyComplete = function (innerSub) {\n    this.destination.complete();\n  };\n\n  return OuterSubscriber;\n}(Subscriber_1.Subscriber);\n\nexports.OuterSubscriber = OuterSubscriber;","\"use strict\";\n\nvar root_1 = require('./root');\n\nvar isArrayLike_1 = require('./isArrayLike');\n\nvar isPromise_1 = require('./isPromise');\n\nvar isObject_1 = require('./isObject');\n\nvar Observable_1 = require('../Observable');\n\nvar iterator_1 = require('../symbol/iterator');\n\nvar InnerSubscriber_1 = require('../InnerSubscriber');\n\nvar observable_1 = require('../symbol/observable');\n\nfunction subscribeToResult(outerSubscriber, result, outerValue, outerIndex) {\n  var destination = new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n\n  if (destination.closed) {\n    return null;\n  }\n\n  if (result instanceof Observable_1.Observable) {\n    if (result._isScalar) {\n      destination.next(result.value);\n      destination.complete();\n      return null;\n    } else {\n      destination.syncErrorThrowable = true;\n      return result.subscribe(destination);\n    }\n  } else if (isArrayLike_1.isArrayLike(result)) {\n    for (var i = 0, len = result.length; i < len && !destination.closed; i++) {\n      destination.next(result[i]);\n    }\n\n    if (!destination.closed) {\n      destination.complete();\n    }\n  } else if (isPromise_1.isPromise(result)) {\n    result.then(function (value) {\n      if (!destination.closed) {\n        destination.next(value);\n        destination.complete();\n      }\n    }, function (err) {\n      return destination.error(err);\n    }).then(null, function (err) {\n      // Escaping the Promise trap: globally throw unhandled errors\n      root_1.root.setTimeout(function () {\n        throw err;\n      });\n    });\n    return destination;\n  } else if (result && typeof result[iterator_1.iterator] === 'function') {\n    var iterator = result[iterator_1.iterator]();\n\n    do {\n      var item = iterator.next();\n\n      if (item.done) {\n        destination.complete();\n        break;\n      }\n\n      destination.next(item.value);\n\n      if (destination.closed) {\n        break;\n      }\n    } while (true);\n  } else if (result && typeof result[observable_1.observable] === 'function') {\n    var obs = result[observable_1.observable]();\n\n    if (typeof obs.subscribe !== 'function') {\n      destination.error(new TypeError('Provided object does not correctly implement Symbol.observable'));\n    } else {\n      return obs.subscribe(new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex));\n    }\n  } else {\n    var value = isObject_1.isObject(result) ? 'an invalid object' : \"'\" + result + \"'\";\n    var msg = \"You provided \" + value + \" where a stream was expected.\" + ' You can provide an Observable, Promise, Array, or Iterable.';\n    destination.error(new TypeError(msg));\n  }\n\n  return null;\n}\n\nexports.subscribeToResult = subscribeToResult;","\"use strict\";\n\nvar Observable_1 = require('../Observable');\n\nvar ArrayObservable_1 = require('./ArrayObservable');\n\nvar isScheduler_1 = require('../util/isScheduler');\n\nvar mergeAll_1 = require('../operators/mergeAll');\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = Rx.Observable.merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = Rx.Observable.merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits it's max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits it's max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\n\n\nfunction merge() {\n  var observables = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    observables[_i - 0] = arguments[_i];\n  }\n\n  var concurrent = Number.POSITIVE_INFINITY;\n  var scheduler = null;\n  var last = observables[observables.length - 1];\n\n  if (isScheduler_1.isScheduler(last)) {\n    scheduler = observables.pop();\n\n    if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n      concurrent = observables.pop();\n    }\n  } else if (typeof last === 'number') {\n    concurrent = observables.pop();\n  }\n\n  if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable_1.Observable) {\n    return observables[0];\n  }\n\n  return mergeAll_1.mergeAll(concurrent)(new ArrayObservable_1.ArrayObservable(observables, scheduler));\n}\n\nexports.merge = merge;","'use strict';\n\nexports.__esModule = true;\n\nvar _setStatic = require('./setStatic');\n\nvar _setStatic2 = _interopRequireDefault(_setStatic);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar setDisplayName = function setDisplayName(displayName) {\n  return (0, _setStatic2.default)('displayName', displayName);\n};\n\nexports.default = setDisplayName;","\"use strict\";\n\nexports.isArray = Array.isArray || function (x) {\n  return x && typeof x.length === 'number';\n};","\"use strict\"; // typeof any so that it we don't have to cast when comparing a result to the error object\n\nexports.errorObject = {\n  e: {}\n};","\"use strict\";\n\nvar root_1 = require('../util/root');\n\nfunction getSymbolObservable(context) {\n  var $$observable;\n  var Symbol = context.Symbol;\n\n  if (typeof Symbol === 'function') {\n    if (Symbol.observable) {\n      $$observable = Symbol.observable;\n    } else {\n      $$observable = Symbol('observable');\n      Symbol.observable = $$observable;\n    }\n  } else {\n    $$observable = '@@observable';\n  }\n\n  return $$observable;\n}\n\nexports.getSymbolObservable = getSymbolObservable;\nexports.observable = getSymbolObservable(root_1.root);\n/**\n * @deprecated use observable instead\n */\n\nexports.$$observable = exports.observable;","\"use strict\";\n\nvar AsyncAction_1 = require('./AsyncAction');\n\nvar AsyncScheduler_1 = require('./AsyncScheduler');\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asap} scheduler.\n *\n * @example <caption>Use async scheduler to delay task</caption>\n * const task = () => console.log('it works!');\n *\n * Rx.Scheduler.async.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n *\n *\n * @example <caption>Use async scheduler to repeat task in intervals</caption>\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * Rx.Scheduler.async.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n *\n * @static true\n * @name async\n * @owner Scheduler\n */\n\n\nexports.async = new AsyncScheduler_1.AsyncScheduler(AsyncAction_1.AsyncAction);","\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) {\n    if (b.hasOwnProperty(p)) d[p] = b[p];\n  }\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar Observable_1 = require('../Observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\n\n\nvar ScalarObservable = function (_super) {\n  __extends(ScalarObservable, _super);\n\n  function ScalarObservable(value, scheduler) {\n    _super.call(this);\n\n    this.value = value;\n    this.scheduler = scheduler;\n    this._isScalar = true;\n\n    if (scheduler) {\n      this._isScalar = false;\n    }\n  }\n\n  ScalarObservable.create = function (value, scheduler) {\n    return new ScalarObservable(value, scheduler);\n  };\n\n  ScalarObservable.dispatch = function (state) {\n    var done = state.done,\n        value = state.value,\n        subscriber = state.subscriber;\n\n    if (done) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(value);\n\n    if (subscriber.closed) {\n      return;\n    }\n\n    state.done = true;\n    this.schedule(state);\n  };\n  /** @deprecated internal use only */\n\n\n  ScalarObservable.prototype._subscribe = function (subscriber) {\n    var value = this.value;\n    var scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(ScalarObservable.dispatch, 0, {\n        done: false,\n        value: value,\n        subscriber: subscriber\n      });\n    } else {\n      subscriber.next(value);\n\n      if (!subscriber.closed) {\n        subscriber.complete();\n      }\n    }\n  };\n\n  return ScalarObservable;\n}(Observable_1.Observable);\n\nexports.ScalarObservable = ScalarObservable;","\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) {\n    if (b.hasOwnProperty(p)) d[p] = b[p];\n  }\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar Observable_1 = require('../Observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\n\n\nvar EmptyObservable = function (_super) {\n  __extends(EmptyObservable, _super);\n\n  function EmptyObservable(scheduler) {\n    _super.call(this);\n\n    this.scheduler = scheduler;\n  }\n  /**\n   * Creates an Observable that emits no items to the Observer and immediately\n   * emits a complete notification.\n   *\n   * <span class=\"informal\">Just emits 'complete', and nothing else.\n   * </span>\n   *\n   * <img src=\"./img/empty.png\" width=\"100%\">\n   *\n   * This static operator is useful for creating a simple Observable that only\n   * emits the complete notification. It can be used for composing with other\n   * Observables, such as in a {@link mergeMap}.\n   *\n   * @example <caption>Emit the number 7, then complete.</caption>\n   * var result = Rx.Observable.empty().startWith(7);\n   * result.subscribe(x => console.log(x));\n   *\n   * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n   * var interval = Rx.Observable.interval(1000);\n   * var result = interval.mergeMap(x =>\n   *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n   * );\n   * result.subscribe(x => console.log(x));\n   *\n   * // Results in the following to the console:\n   * // x is equal to the count on the interval eg(0,1,2,3,...)\n   * // x will occur every 1000ms\n   * // if x % 2 is equal to 1 print abc\n   * // if x % 2 is not equal to 1 nothing will be output\n   *\n   * @see {@link create}\n   * @see {@link never}\n   * @see {@link of}\n   * @see {@link throw}\n   *\n   * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n   * the emission of the complete notification.\n   * @return {Observable} An \"empty\" Observable: emits only the complete\n   * notification.\n   * @static true\n   * @name empty\n   * @owner Observable\n   */\n\n\n  EmptyObservable.create = function (scheduler) {\n    return new EmptyObservable(scheduler);\n  };\n\n  EmptyObservable.dispatch = function (arg) {\n    var subscriber = arg.subscriber;\n    subscriber.complete();\n  };\n  /** @deprecated internal use only */\n\n\n  EmptyObservable.prototype._subscribe = function (subscriber) {\n    var scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(EmptyObservable.dispatch, 0, {\n        subscriber: subscriber\n      });\n    } else {\n      subscriber.complete();\n    }\n  };\n\n  return EmptyObservable;\n}(Observable_1.Observable);\n\nexports.EmptyObservable = EmptyObservable;","\"use strict\";\n\nvar root_1 = require('../util/root');\n\nfunction symbolIteratorPonyfill(root) {\n  var Symbol = root.Symbol;\n\n  if (typeof Symbol === 'function') {\n    if (!Symbol.iterator) {\n      Symbol.iterator = Symbol('iterator polyfill');\n    }\n\n    return Symbol.iterator;\n  } else {\n    // [for Mozilla Gecko 27-35:](https://mzl.la/2ewE1zC)\n    var Set_1 = root.Set;\n\n    if (Set_1 && typeof new Set_1()['@@iterator'] === 'function') {\n      return '@@iterator';\n    }\n\n    var Map_1 = root.Map; // required for compatability with es6-shim\n\n    if (Map_1) {\n      var keys = Object.getOwnPropertyNames(Map_1.prototype);\n\n      for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i]; // according to spec, Map.prototype[@@iterator] and Map.orototype.entries must be equal.\n\n        if (key !== 'entries' && key !== 'size' && Map_1.prototype[key] === Map_1.prototype['entries']) {\n          return key;\n        }\n      }\n    }\n\n    return '@@iterator';\n  }\n}\n\nexports.symbolIteratorPonyfill = symbolIteratorPonyfill;\nexports.iterator = symbolIteratorPonyfill(root_1.root);\n/**\n * @deprecated use iterator instead\n */\n\nexports.$$iterator = exports.iterator;","\"use strict\";\n\nexports.__esModule = true;\n\nvar setStatic = function setStatic(key, value) {\n  return function (BaseComponent) {\n    /* eslint-disable no-param-reassign */\n    BaseComponent[key] = value;\n    /* eslint-enable no-param-reassign */\n\n    return BaseComponent;\n  };\n};\n\nexports.default = setStatic;","'use strict';\n\nexports.__esModule = true;\n\nvar _getDisplayName = require('./getDisplayName');\n\nvar _getDisplayName2 = _interopRequireDefault(_getDisplayName);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar wrapDisplayName = function wrapDisplayName(BaseComponent, hocName) {\n  return hocName + '(' + (0, _getDisplayName2.default)(BaseComponent) + ')';\n};\n\nexports.default = wrapDisplayName;","/* global window */\nimport ponyfill from './ponyfill.js';\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;","var g; // This works in non-strict mode\n\ng = function () {\n  return this;\n}();\n\ntry {\n  // This works if eval is allowed (see CSP)\n  g = g || new Function(\"return this\")();\n} catch (e) {\n  // This works if the window reference is available\n  if (typeof window === \"object\") g = window;\n} // g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\n\nmodule.exports = g;","'use strict';\n\nexports.__esModule = true;\nvar _config = {\n  fromESObservable: null,\n  toESObservable: null\n};\n\nvar configureObservable = function configureObservable(c) {\n  _config = c;\n};\n\nvar config = exports.config = {\n  fromESObservable: function fromESObservable(observable) {\n    return typeof _config.fromESObservable === 'function' ? _config.fromESObservable(observable) : observable;\n  },\n  toESObservable: function toESObservable(stream) {\n    return typeof _config.toESObservable === 'function' ? _config.toESObservable(stream) : stream;\n  }\n};\nexports.default = configureObservable;","\"use strict\";\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\nexports.isFunction = isFunction;","\"use strict\";\n\nvar isArray_1 = require('./util/isArray');\n\nvar isObject_1 = require('./util/isObject');\n\nvar isFunction_1 = require('./util/isFunction');\n\nvar tryCatch_1 = require('./util/tryCatch');\n\nvar errorObject_1 = require('./util/errorObject');\n\nvar UnsubscriptionError_1 = require('./util/UnsubscriptionError');\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\n\n\nvar Subscription = function () {\n  /**\n   * @param {function(): void} [unsubscribe] A function describing how to\n   * perform the disposal of resources when the `unsubscribe` method is called.\n   */\n  function Subscription(unsubscribe) {\n    /**\n     * A flag to indicate whether this Subscription has already been unsubscribed.\n     * @type {boolean}\n     */\n    this.closed = false;\n    this._parent = null;\n    this._parents = null;\n    this._subscriptions = null;\n\n    if (unsubscribe) {\n      this._unsubscribe = unsubscribe;\n    }\n  }\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n\n\n  Subscription.prototype.unsubscribe = function () {\n    var hasErrors = false;\n    var errors;\n\n    if (this.closed) {\n      return;\n    }\n\n    var _a = this,\n        _parent = _a._parent,\n        _parents = _a._parents,\n        _unsubscribe = _a._unsubscribe,\n        _subscriptions = _a._subscriptions;\n\n    this.closed = true;\n    this._parent = null;\n    this._parents = null; // null out _subscriptions first so any child subscriptions that attempt\n    // to remove themselves from this subscription will noop\n\n    this._subscriptions = null;\n    var index = -1;\n    var len = _parents ? _parents.length : 0; // if this._parent is null, then so is this._parents, and we\n    // don't have to remove ourselves from any parent subscriptions.\n\n    while (_parent) {\n      _parent.remove(this); // if this._parents is null or index >= len,\n      // then _parent is set to null, and the loop exits\n\n\n      _parent = ++index < len && _parents[index] || null;\n    }\n\n    if (isFunction_1.isFunction(_unsubscribe)) {\n      var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);\n\n      if (trial === errorObject_1.errorObject) {\n        hasErrors = true;\n        errors = errors || (errorObject_1.errorObject.e instanceof UnsubscriptionError_1.UnsubscriptionError ? flattenUnsubscriptionErrors(errorObject_1.errorObject.e.errors) : [errorObject_1.errorObject.e]);\n      }\n    }\n\n    if (isArray_1.isArray(_subscriptions)) {\n      index = -1;\n      len = _subscriptions.length;\n\n      while (++index < len) {\n        var sub = _subscriptions[index];\n\n        if (isObject_1.isObject(sub)) {\n          var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);\n\n          if (trial === errorObject_1.errorObject) {\n            hasErrors = true;\n            errors = errors || [];\n            var err = errorObject_1.errorObject.e;\n\n            if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {\n              errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n    }\n\n    if (hasErrors) {\n      throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n    }\n  };\n  /**\n   * Adds a tear down to be called during the unsubscribe() of this\n   * Subscription.\n   *\n   * If the tear down being added is a subscription that is already\n   * unsubscribed, is the same reference `add` is being called on, or is\n   * `Subscription.EMPTY`, it will not be added.\n   *\n   * If this subscription is already in an `closed` state, the passed\n   * tear down logic will be executed immediately.\n   *\n   * @param {TeardownLogic} teardown The additional logic to execute on\n   * teardown.\n   * @return {Subscription} Returns the Subscription used or created to be\n   * added to the inner subscriptions list. This Subscription can be used with\n   * `remove()` to remove the passed teardown logic from the inner subscriptions\n   * list.\n   */\n\n\n  Subscription.prototype.add = function (teardown) {\n    if (!teardown || teardown === Subscription.EMPTY) {\n      return Subscription.EMPTY;\n    }\n\n    if (teardown === this) {\n      return this;\n    }\n\n    var subscription = teardown;\n\n    switch (typeof teardown) {\n      case 'function':\n        subscription = new Subscription(teardown);\n\n      case 'object':\n        if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n          return subscription;\n        } else if (this.closed) {\n          subscription.unsubscribe();\n          return subscription;\n        } else if (typeof subscription._addParent !== 'function'\n        /* quack quack */\n        ) {\n            var tmp = subscription;\n            subscription = new Subscription();\n            subscription._subscriptions = [tmp];\n          }\n\n        break;\n\n      default:\n        throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n    }\n\n    var subscriptions = this._subscriptions || (this._subscriptions = []);\n    subscriptions.push(subscription);\n\n    subscription._addParent(this);\n\n    return subscription;\n  };\n  /**\n   * Removes a Subscription from the internal list of subscriptions that will\n   * unsubscribe during the unsubscribe process of this Subscription.\n   * @param {Subscription} subscription The subscription to remove.\n   * @return {void}\n   */\n\n\n  Subscription.prototype.remove = function (subscription) {\n    var subscriptions = this._subscriptions;\n\n    if (subscriptions) {\n      var subscriptionIndex = subscriptions.indexOf(subscription);\n\n      if (subscriptionIndex !== -1) {\n        subscriptions.splice(subscriptionIndex, 1);\n      }\n    }\n  };\n\n  Subscription.prototype._addParent = function (parent) {\n    var _a = this,\n        _parent = _a._parent,\n        _parents = _a._parents;\n\n    if (!_parent || _parent === parent) {\n      // If we don't have a parent, or the new parent is the same as the\n      // current parent, then set this._parent to the new parent.\n      this._parent = parent;\n    } else if (!_parents) {\n      // If there's already one parent, but not multiple, allocate an Array to\n      // store the rest of the parent Subscriptions.\n      this._parents = [parent];\n    } else if (_parents.indexOf(parent) === -1) {\n      // Only add the new parent to the _parents list if it's not already there.\n      _parents.push(parent);\n    }\n  };\n\n  Subscription.EMPTY = function (empty) {\n    empty.closed = true;\n    return empty;\n  }(new Subscription());\n\n  return Subscription;\n}();\n\nexports.Subscription = Subscription;\n\nfunction flattenUnsubscriptionErrors(errors) {\n  return errors.reduce(function (errs, err) {\n    return errs.concat(err instanceof UnsubscriptionError_1.UnsubscriptionError ? err.errors : err);\n  }, []);\n}","\"use strict\";\n\nfunction isObject(x) {\n  return x != null && typeof x === 'object';\n}\n\nexports.isObject = isObject;","\"use strict\";\n\nvar errorObject_1 = require('./errorObject');\n\nvar tryCatchTarget;\n\nfunction tryCatcher() {\n  try {\n    return tryCatchTarget.apply(this, arguments);\n  } catch (e) {\n    errorObject_1.errorObject.e = e;\n    return errorObject_1.errorObject;\n  }\n}\n\nfunction tryCatch(fn) {\n  tryCatchTarget = fn;\n  return tryCatcher;\n}\n\nexports.tryCatch = tryCatch;\n;","\"use strict\";\n\nexports.empty = {\n  closed: true,\n  next: function next(value) {},\n  error: function error(err) {\n    throw err;\n  },\n  complete: function complete() {}\n};","\"use strict\";\n\nvar root_1 = require('../util/root');\n\nvar Symbol = root_1.root.Symbol;\nexports.rxSubscriber = typeof Symbol === 'function' && typeof Symbol.for === 'function' ? Symbol.for('rxSubscriber') : '@@rxSubscriber';\n/**\n * @deprecated use rxSubscriber instead\n */\n\nexports.$$rxSubscriber = exports.rxSubscriber;","\"use strict\";\n\nexports.isArrayLike = function (x) {\n  return x && typeof x.length === 'number';\n};","\"use strict\";\n\nfunction isPromise(value) {\n  return value && typeof value.subscribe !== 'function' && typeof value.then === 'function';\n}\n\nexports.isPromise = isPromise;","\"use strict\";\n\nvar ArrayObservable_1 = require('./ArrayObservable');\n\nexports.of = ArrayObservable_1.ArrayObservable.of;","\"use strict\";\n\nvar FromObservable_1 = require('./FromObservable');\n\nexports.from = FromObservable_1.FromObservable.create;","\"use strict\";\n\nvar Observable_1 = require('./Observable');\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\n\n\nvar Notification = function () {\n  function Notification(kind, value, error) {\n    this.kind = kind;\n    this.value = value;\n    this.error = error;\n    this.hasValue = kind === 'N';\n  }\n  /**\n   * Delivers to the given `observer` the value wrapped by this Notification.\n   * @param {Observer} observer\n   * @return\n   */\n\n\n  Notification.prototype.observe = function (observer) {\n    switch (this.kind) {\n      case 'N':\n        return observer.next && observer.next(this.value);\n\n      case 'E':\n        return observer.error && observer.error(this.error);\n\n      case 'C':\n        return observer.complete && observer.complete();\n    }\n  };\n  /**\n   * Given some {@link Observer} callbacks, deliver the value represented by the\n   * current Notification to the correctly corresponding callback.\n   * @param {function(value: T): void} next An Observer `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n\n\n  Notification.prototype.do = function (next, error, complete) {\n    var kind = this.kind;\n\n    switch (kind) {\n      case 'N':\n        return next && next(this.value);\n\n      case 'E':\n        return error && error(this.error);\n\n      case 'C':\n        return complete && complete();\n    }\n  };\n  /**\n   * Takes an Observer or its individual callback functions, and calls `observe`\n   * or `do` methods accordingly.\n   * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n   * the `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n\n\n  Notification.prototype.accept = function (nextOrObserver, error, complete) {\n    if (nextOrObserver && typeof nextOrObserver.next === 'function') {\n      return this.observe(nextOrObserver);\n    } else {\n      return this.do(nextOrObserver, error, complete);\n    }\n  };\n  /**\n   * Returns a simple Observable that just delivers the notification represented\n   * by this Notification instance.\n   * @return {any}\n   */\n\n\n  Notification.prototype.toObservable = function () {\n    var kind = this.kind;\n\n    switch (kind) {\n      case 'N':\n        return Observable_1.Observable.of(this.value);\n\n      case 'E':\n        return Observable_1.Observable.throw(this.error);\n\n      case 'C':\n        return Observable_1.Observable.empty();\n    }\n\n    throw new Error('unexpected notification kind value');\n  };\n  /**\n   * A shortcut to create a Notification instance of the type `next` from a\n   * given value.\n   * @param {T} value The `next` value.\n   * @return {Notification<T>} The \"next\" Notification representing the\n   * argument.\n   */\n\n\n  Notification.createNext = function (value) {\n    if (typeof value !== 'undefined') {\n      return new Notification('N', value);\n    }\n\n    return Notification.undefinedValueNotification;\n  };\n  /**\n   * A shortcut to create a Notification instance of the type `error` from a\n   * given error.\n   * @param {any} [err] The `error` error.\n   * @return {Notification<T>} The \"error\" Notification representing the\n   * argument.\n   */\n\n\n  Notification.createError = function (err) {\n    return new Notification('E', undefined, err);\n  };\n  /**\n   * A shortcut to create a Notification instance of the type `complete`.\n   * @return {Notification<any>} The valueless \"complete\" Notification.\n   */\n\n\n  Notification.createComplete = function () {\n    return Notification.completeNotification;\n  };\n\n  Notification.completeNotification = new Notification('C');\n  Notification.undefinedValueNotification = new Notification('N', undefined);\n  return Notification;\n}();\n\nexports.Notification = Notification;","\"use strict\";\n\nvar mergeMap_1 = require('./mergeMap');\n\nvar identity_1 = require('../util/identity');\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * <img src=\"./img/mergeAll.png\" width=\"100%\">\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var firstOrder = higherOrder.mergeAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));\n * var firstOrder = higherOrder.mergeAll(2);\n * firstOrder.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\n\n\nfunction mergeAll(concurrent) {\n  if (concurrent === void 0) {\n    concurrent = Number.POSITIVE_INFINITY;\n  }\n\n  return mergeMap_1.mergeMap(identity_1.identity, null, concurrent);\n}\n\nexports.mergeAll = mergeAll;","\"use strict\";\n\nfunction identity(x) {\n  return x;\n}\n\nexports.identity = identity;","\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) {\n    if (b.hasOwnProperty(p)) d[p] = b[p];\n  }\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar OuterSubscriber_1 = require('../OuterSubscriber');\n\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\n\n\nfunction switchMap(project, resultSelector) {\n  return function switchMapOperatorFunction(source) {\n    return source.lift(new SwitchMapOperator(project, resultSelector));\n  };\n}\n\nexports.switchMap = switchMap;\n\nvar SwitchMapOperator = function () {\n  function SwitchMapOperator(project, resultSelector) {\n    this.project = project;\n    this.resultSelector = resultSelector;\n  }\n\n  SwitchMapOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new SwitchMapSubscriber(subscriber, this.project, this.resultSelector));\n  };\n\n  return SwitchMapOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\n\nvar SwitchMapSubscriber = function (_super) {\n  __extends(SwitchMapSubscriber, _super);\n\n  function SwitchMapSubscriber(destination, project, resultSelector) {\n    _super.call(this, destination);\n\n    this.project = project;\n    this.resultSelector = resultSelector;\n    this.index = 0;\n  }\n\n  SwitchMapSubscriber.prototype._next = function (value) {\n    var result;\n    var index = this.index++;\n\n    try {\n      result = this.project(value, index);\n    } catch (error) {\n      this.destination.error(error);\n      return;\n    }\n\n    this._innerSub(result, value, index);\n  };\n\n  SwitchMapSubscriber.prototype._innerSub = function (result, value, index) {\n    var innerSubscription = this.innerSubscription;\n\n    if (innerSubscription) {\n      innerSubscription.unsubscribe();\n    }\n\n    this.add(this.innerSubscription = subscribeToResult_1.subscribeToResult(this, result, value, index));\n  };\n\n  SwitchMapSubscriber.prototype._complete = function () {\n    var innerSubscription = this.innerSubscription;\n\n    if (!innerSubscription || innerSubscription.closed) {\n      _super.prototype._complete.call(this);\n    }\n  };\n  /** @deprecated internal use only */\n\n\n  SwitchMapSubscriber.prototype._unsubscribe = function () {\n    this.innerSubscription = null;\n  };\n\n  SwitchMapSubscriber.prototype.notifyComplete = function (innerSub) {\n    this.remove(innerSub);\n    this.innerSubscription = null;\n\n    if (this.isStopped) {\n      _super.prototype._complete.call(this);\n    }\n  };\n\n  SwitchMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n    if (this.resultSelector) {\n      this._tryNotifyNext(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      this.destination.next(innerValue);\n    }\n  };\n\n  SwitchMapSubscriber.prototype._tryNotifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {\n    var result;\n\n    try {\n      result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    this.destination.next(result);\n  };\n\n  return SwitchMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber);","function _isPlaceholder(a) {\n  return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}\n\nmodule.exports = _isPlaceholder;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function invariant(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n\n    throw error;\n  }\n};\n\nmodule.exports = invariant;","var camel2hyphen = require('string-convert/camel2hyphen');\n\nvar isDimension = function isDimension(feature) {\n  var re = /[height|width]$/;\n  return re.test(feature);\n};\n\nvar obj2mq = function obj2mq(obj) {\n  var mq = '';\n  var features = Object.keys(obj);\n  features.forEach(function (feature, index) {\n    var value = obj[feature];\n    feature = camel2hyphen(feature); // Add px to dimension features\n\n    if (isDimension(feature) && typeof value === 'number') {\n      value = value + 'px';\n    }\n\n    if (value === true) {\n      mq += feature;\n    } else if (value === false) {\n      mq += 'not ' + feature;\n    } else {\n      mq += '(' + feature + ': ' + value + ')';\n    }\n\n    if (index < features.length - 1) {\n      mq += ' and ';\n    }\n  });\n  return mq;\n};\n\nvar json2mq = function json2mq(query) {\n  var mq = '';\n\n  if (typeof query === 'string') {\n    return query;\n  } // Handling array of media queries\n\n\n  if (query instanceof Array) {\n    query.forEach(function (q, index) {\n      mq += obj2mq(q);\n\n      if (index < query.length - 1) {\n        mq += ', ';\n      }\n    });\n    return mq;\n  } // Handling single media query\n\n\n  return obj2mq(query);\n};\n\nmodule.exports = json2mq;","var camel2hyphen = function camel2hyphen(str) {\n  return str.replace(/[A-Z]/g, function (match) {\n    return '-' + match.toLowerCase();\n  }).toLowerCase();\n};\n\nmodule.exports = camel2hyphen;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ProgressiveImage = require('./ProgressiveImage');\n\nvar _ProgressiveImage2 = _interopRequireDefault(_ProgressiveImage);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nexports.default = _ProgressiveImage2.default;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DELAY = undefined;\nexports.ownerPropsToChildProps = ownerPropsToChildProps;\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _compose = require('recompose/compose');\n\nvar _compose2 = _interopRequireDefault(_compose);\n\nvar _setDisplayName = require('recompose/setDisplayName');\n\nvar _setDisplayName2 = _interopRequireDefault(_setDisplayName);\n\nvar _defaultProps = require('recompose/defaultProps');\n\nvar _defaultProps2 = _interopRequireDefault(_defaultProps);\n\nvar _setPropTypes = require('recompose/setPropTypes');\n\nvar _setPropTypes2 = _interopRequireDefault(_setPropTypes);\n\nvar _mapPropsStream = require('recompose/mapPropsStream');\n\nvar _mapPropsStream2 = _interopRequireDefault(_mapPropsStream);\n\nvar _Observable = require('rxjs/Observable');\n\nvar _async = require('rxjs/scheduler/async');\n\nrequire('rxjs/add/operator/combineLatest');\n\nrequire('rxjs/add/operator/startWith');\n\nrequire('rxjs/add/operator/switchMapTo');\n\nrequire('rxjs/add/operator/delay');\n\nrequire('rxjs/add/operator/merge');\n\nrequire('rxjs/add/operator/filter');\n\nrequire('rxjs/add/operator/switchMap');\n\nrequire('rxjs/add/operator/mapTo');\n\nrequire('rxjs/add/operator/switch');\n\nrequire('rxjs/add/operator/map');\n\nrequire('rxjs/add/operator/distinctUntilChanged');\n\nrequire('rxjs/add/observable/from');\n\nrequire('rxjs/add/observable/of');\n\nrequire('rxjs/add/observable/merge');\n\nvar _Img = require('./Img');\n\nvar _Img2 = _interopRequireDefault(_Img);\n\nvar _loadImage = require('./loadImage');\n\nvar _loadImage2 = _interopRequireDefault(_loadImage);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar DELAY = exports.DELAY = 200;\n\nfunction ownerPropsToChildProps(propStream) {\n  var load = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _loadImage2.default;\n  var t = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DELAY;\n  var scheduler = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : _async.async;\n\n  var props$ = _Observable.Observable.from(propStream);\n\n  var placeholder$ = props$.map(function (e) {\n    return e.placeholder;\n  });\n  var imagePromise$ = props$.map(function (e) {\n    return e.src;\n  }).switchMap(load).startWith({\n    src: '',\n    isCached: false\n  });\n  var src$ = imagePromise$.map(function (e) {\n    return e.src;\n  }).filter(function (src) {\n    return !!src;\n  });\n  var isCached$ = imagePromise$.map(function (e) {\n    return e.isCached;\n  }).distinctUntilChanged();\n\n  var isLoaded$ = _Observable.Observable.merge(placeholder$.mapTo(_Observable.Observable.of(false)), imagePromise$.map(function (_ref) {\n    var isCached = _ref.isCached;\n    return _Observable.Observable.of(true).delay(isCached ? 0 : t, scheduler);\n  })).switch().startWith(false).distinctUntilChanged();\n\n  var image$ = placeholder$.merge(src$).distinctUntilChanged();\n  return props$.combineLatest(image$, isCached$, isLoaded$, function (props, image, isCached, isLoaded) {\n    return Object.assign({}, props, {\n      image: image,\n      isCached: isCached,\n      isLoaded: isLoaded\n    });\n  });\n}\n\nexports.default = (0, _compose2.default)((0, _setDisplayName2.default)('ProgressiveImage'), (0, _setPropTypes2.default)({\n  src: _propTypes2.default.string.isRequired,\n  placeholder: _propTypes2.default.string.isRequired,\n  opacity: _propTypes2.default.number,\n  blur: _propTypes2.default.number,\n  scale: _propTypes2.default.number,\n  component: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func])\n}), (0, _defaultProps2.default)({\n  opacity: 0.5,\n  blur: 20,\n  scale: 1,\n  transition: 'opacity 0.3s linear',\n  component: 'div'\n}), (0, _mapPropsStream2.default)(ownerPropsToChildProps))(_Img2.default);","\"use strict\";\n\nexports.__esModule = true;\nexports.default = compose;\n\nfunction compose() {\n  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(undefined, arguments));\n    };\n  });\n}","'use strict';\n\nexports.__esModule = true;\n\nvar _react = require('react');\n\nvar _setDisplayName = require('./setDisplayName');\n\nvar _setDisplayName2 = _interopRequireDefault(_setDisplayName);\n\nvar _wrapDisplayName = require('./wrapDisplayName');\n\nvar _wrapDisplayName2 = _interopRequireDefault(_wrapDisplayName);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar defaultProps = function defaultProps(props) {\n  return function (BaseComponent) {\n    var factory = (0, _react.createFactory)(BaseComponent);\n\n    var DefaultProps = function DefaultProps(ownerProps) {\n      return factory(ownerProps);\n    };\n\n    DefaultProps.defaultProps = props;\n\n    if (process.env.NODE_ENV !== 'production') {\n      return (0, _setDisplayName2.default)((0, _wrapDisplayName2.default)(BaseComponent, 'defaultProps'))(DefaultProps);\n    }\n\n    return DefaultProps;\n  };\n};\n\nexports.default = defaultProps;","'use strict';\n\nexports.__esModule = true;\n\nvar getDisplayName = function getDisplayName(Component) {\n  if (typeof Component === 'string') {\n    return Component;\n  }\n\n  if (!Component) {\n    return undefined;\n  }\n\n  return Component.displayName || Component.name || 'Component';\n};\n\nexports.default = getDisplayName;","'use strict';\n\nexports.__esModule = true;\n\nvar _setStatic = require('./setStatic');\n\nvar _setStatic2 = _interopRequireDefault(_setStatic);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar setPropTypes = function setPropTypes(propTypes) {\n  return (0, _setStatic2.default)('propTypes', propTypes);\n};\n\nexports.default = setPropTypes;","'use strict';\n\nexports.__esModule = true;\nexports.mapPropsStreamWithConfig = undefined;\n\nvar _react = require('react');\n\nvar _symbolObservable = require('symbol-observable');\n\nvar _symbolObservable2 = _interopRequireDefault(_symbolObservable);\n\nvar _componentFromStream = require('./componentFromStream');\n\nvar _setDisplayName = require('./setDisplayName');\n\nvar _setDisplayName2 = _interopRequireDefault(_setDisplayName);\n\nvar _wrapDisplayName = require('./wrapDisplayName');\n\nvar _wrapDisplayName2 = _interopRequireDefault(_wrapDisplayName);\n\nvar _setObservableConfig = require('./setObservableConfig');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar identity = function identity(t) {\n  return t;\n};\n\nvar mapPropsStreamWithConfig = exports.mapPropsStreamWithConfig = function mapPropsStreamWithConfig(config) {\n  var componentFromStream = (0, _componentFromStream.componentFromStreamWithConfig)({\n    fromESObservable: identity,\n    toESObservable: identity\n  });\n  return function (transform) {\n    return function (BaseComponent) {\n      var factory = (0, _react.createFactory)(BaseComponent);\n      var fromESObservable = config.fromESObservable,\n          toESObservable = config.toESObservable;\n      return componentFromStream(function (props$) {\n        var _ref;\n\n        return _ref = {\n          subscribe: function subscribe(observer) {\n            var subscription = toESObservable(transform(fromESObservable(props$))).subscribe({\n              next: function next(childProps) {\n                return observer.next(factory(childProps));\n              }\n            });\n            return {\n              unsubscribe: function unsubscribe() {\n                return subscription.unsubscribe();\n              }\n            };\n          }\n        }, _ref[_symbolObservable2.default] = function () {\n          return this;\n        }, _ref;\n      });\n    };\n  };\n};\n\nvar mapPropsStream = function mapPropsStream(transform) {\n  var hoc = mapPropsStreamWithConfig(_setObservableConfig.config)(transform);\n\n  if (process.env.NODE_ENV !== 'production') {\n    return function (BaseComponent) {\n      return (0, _setDisplayName2.default)((0, _wrapDisplayName2.default)(BaseComponent, 'mapPropsStream'))(hoc(BaseComponent));\n    };\n  }\n\n  return hoc;\n};\n\nexports.default = mapPropsStream;","module.exports = function (originalModule) {\n  if (!originalModule.webpackPolyfill) {\n    var module = Object.create(originalModule); // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    Object.defineProperty(module, \"exports\", {\n      enumerable: true\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","export default function symbolObservablePonyfill(root) {\n  var result;\n  var Symbol = root.Symbol;\n\n  if (typeof Symbol === 'function') {\n    if (Symbol.observable) {\n      result = Symbol.observable;\n    } else {\n      result = Symbol('observable');\n      Symbol.observable = result;\n    }\n  } else {\n    result = '@@observable';\n  }\n\n  return result;\n}\n;","'use strict';\n\nexports.__esModule = true;\nexports.componentFromStreamWithConfig = undefined;\n\nvar _react = require('react');\n\nvar _changeEmitter = require('change-emitter');\n\nvar _symbolObservable = require('symbol-observable');\n\nvar _symbolObservable2 = _interopRequireDefault(_symbolObservable);\n\nvar _setObservableConfig = require('./setObservableConfig');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar componentFromStreamWithConfig = exports.componentFromStreamWithConfig = function componentFromStreamWithConfig(config) {\n  return function (propsToVdom) {\n    return function (_Component) {\n      _inherits(ComponentFromStream, _Component);\n\n      function ComponentFromStream() {\n        var _config$fromESObserva;\n\n        var _temp, _this, _ret;\n\n        _classCallCheck(this, ComponentFromStream);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.state = {\n          vdom: null\n        }, _this.propsEmitter = (0, _changeEmitter.createChangeEmitter)(), _this.props$ = config.fromESObservable((_config$fromESObserva = {\n          subscribe: function subscribe(observer) {\n            var unsubscribe = _this.propsEmitter.listen(function (props) {\n              if (props) {\n                observer.next(props);\n              } else {\n                observer.complete();\n              }\n            });\n\n            return {\n              unsubscribe: unsubscribe\n            };\n          }\n        }, _config$fromESObserva[_symbolObservable2.default] = function () {\n          return this;\n        }, _config$fromESObserva)), _this.vdom$ = config.toESObservable(propsToVdom(_this.props$)), _temp), _possibleConstructorReturn(_this, _ret);\n      } // Stream of props\n      // Stream of vdom\n\n\n      ComponentFromStream.prototype.componentWillMount = function componentWillMount() {\n        var _this2 = this; // Subscribe to child prop changes so we know when to re-render\n\n\n        this.subscription = this.vdom$.subscribe({\n          next: function next(vdom) {\n            _this2.setState({\n              vdom: vdom\n            });\n          }\n        });\n        this.propsEmitter.emit(this.props);\n      };\n\n      ComponentFromStream.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n        // Receive new props from the owner\n        this.propsEmitter.emit(nextProps);\n      };\n\n      ComponentFromStream.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {\n        return nextState.vdom !== this.state.vdom;\n      };\n\n      ComponentFromStream.prototype.componentWillUnmount = function componentWillUnmount() {\n        // Call without arguments to complete stream\n        this.propsEmitter.emit(); // Clean-up subscription before un-mounting\n\n        this.subscription.unsubscribe();\n      };\n\n      ComponentFromStream.prototype.render = function render() {\n        return this.state.vdom;\n      };\n\n      return ComponentFromStream;\n    }(_react.Component);\n  };\n};\n\nvar componentFromStream = function componentFromStream(propsToVdom) {\n  return componentFromStreamWithConfig(_setObservableConfig.config)(propsToVdom);\n};\n\nexports.default = componentFromStream;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar createChangeEmitter = exports.createChangeEmitter = function createChangeEmitter() {\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n\n  function listen(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected listener to be a function.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function () {\n      if (!isSubscribed) {\n        return;\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n    };\n  }\n\n  function emit() {\n    currentListeners = nextListeners;\n    var listeners = currentListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      listeners[i].apply(listeners, arguments);\n    }\n  }\n\n  return {\n    listen: listen,\n    emit: emit\n  };\n};","\"use strict\";\n\nvar Subscriber_1 = require('../Subscriber');\n\nvar rxSubscriber_1 = require('../symbol/rxSubscriber');\n\nvar Observer_1 = require('../Observer');\n\nfunction toSubscriber(nextOrObserver, error, complete) {\n  if (nextOrObserver) {\n    if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n      return nextOrObserver;\n    }\n\n    if (nextOrObserver[rxSubscriber_1.rxSubscriber]) {\n      return nextOrObserver[rxSubscriber_1.rxSubscriber]();\n    }\n  }\n\n  if (!nextOrObserver && !error && !complete) {\n    return new Subscriber_1.Subscriber(Observer_1.empty);\n  }\n\n  return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n}\n\nexports.toSubscriber = toSubscriber;","\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) {\n    if (b.hasOwnProperty(p)) d[p] = b[p];\n  }\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\n\n\nvar UnsubscriptionError = function (_super) {\n  __extends(UnsubscriptionError, _super);\n\n  function UnsubscriptionError(errors) {\n    _super.call(this);\n\n    this.errors = errors;\n    var err = Error.call(this, errors ? errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) {\n      return i + 1 + \") \" + err.toString();\n    }).join('\\n  ') : '');\n    this.name = err.name = 'UnsubscriptionError';\n    this.stack = err.stack;\n    this.message = err.message;\n  }\n\n  return UnsubscriptionError;\n}(Error);\n\nexports.UnsubscriptionError = UnsubscriptionError;","\"use strict\";\n\nvar noop_1 = require('./noop');\n/* tslint:enable:max-line-length */\n\n\nfunction pipe() {\n  var fns = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    fns[_i - 0] = arguments[_i];\n  }\n\n  return pipeFromArray(fns);\n}\n\nexports.pipe = pipe;\n/* @internal */\n\nfunction pipeFromArray(fns) {\n  if (!fns) {\n    return noop_1.noop;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input) {\n    return fns.reduce(function (prev, fn) {\n      return fn(prev);\n    }, input);\n  };\n}\n\nexports.pipeFromArray = pipeFromArray;","\"use strict\";\n/* tslint:disable:no-empty */\n\nfunction noop() {}\n\nexports.noop = noop;","\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) {\n    if (b.hasOwnProperty(p)) d[p] = b[p];\n  }\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar root_1 = require('../util/root');\n\nvar Action_1 = require('./Action');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\n\nvar AsyncAction = function (_super) {\n  __extends(AsyncAction, _super);\n\n  function AsyncAction(scheduler, work) {\n    _super.call(this, scheduler, work);\n\n    this.scheduler = scheduler;\n    this.pending = false;\n    this.work = work;\n  }\n\n  AsyncAction.prototype.schedule = function (state, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    if (this.closed) {\n      return this;\n    } // Always replace the current state with the new state.\n\n\n    this.state = state; // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n\n    this.pending = true;\n    var id = this.id;\n    var scheduler = this.scheduler; //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    this.delay = delay; // If this action has already an async Id, don't request a new one.\n\n    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n    return this;\n  };\n\n  AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    return root_1.root.setInterval(scheduler.flush.bind(scheduler, this), delay);\n  };\n\n  AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    } // If this action is rescheduled with the same delay time, don't clear the interval id.\n\n\n    if (delay !== null && this.delay === delay && this.pending === false) {\n      return id;\n    } // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n\n\n    return root_1.root.clearInterval(id) && undefined || undefined;\n  };\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n\n\n  AsyncAction.prototype.execute = function (state, delay) {\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n\n    var error = this._execute(state, delay);\n\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  };\n\n  AsyncAction.prototype._execute = function (state, delay) {\n    var errored = false;\n    var errorValue = undefined;\n\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      errorValue = !!e && e || new Error(e);\n    }\n\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  };\n  /** @deprecated internal use only */\n\n\n  AsyncAction.prototype._unsubscribe = function () {\n    var id = this.id;\n    var scheduler = this.scheduler;\n    var actions = scheduler.actions;\n    var index = actions.indexOf(this);\n    this.work = null;\n    this.state = null;\n    this.pending = false;\n    this.scheduler = null;\n\n    if (index !== -1) {\n      actions.splice(index, 1);\n    }\n\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, null);\n    }\n\n    this.delay = null;\n  };\n\n  return AsyncAction;\n}(Action_1.Action);\n\nexports.AsyncAction = AsyncAction;","\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) {\n    if (b.hasOwnProperty(p)) d[p] = b[p];\n  }\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar Subscription_1 = require('../Subscription');\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\n\n\nvar Action = function (_super) {\n  __extends(Action, _super);\n\n  function Action(scheduler, work) {\n    _super.call(this);\n  }\n  /**\n   * Schedules this action on its parent Scheduler for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n\n\n  Action.prototype.schedule = function (state, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    return this;\n  };\n\n  return Action;\n}(Subscription_1.Subscription);\n\nexports.Action = Action;","\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) {\n    if (b.hasOwnProperty(p)) d[p] = b[p];\n  }\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar Scheduler_1 = require('../Scheduler');\n\nvar AsyncScheduler = function (_super) {\n  __extends(AsyncScheduler, _super);\n\n  function AsyncScheduler() {\n    _super.apply(this, arguments);\n\n    this.actions = [];\n    /**\n     * A flag to indicate whether the Scheduler is currently executing a batch of\n     * queued actions.\n     * @type {boolean}\n     */\n\n    this.active = false;\n    /**\n     * An internal ID used to track the latest asynchronous task such as those\n     * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n     * others.\n     * @type {any}\n     */\n\n    this.scheduled = undefined;\n  }\n\n  AsyncScheduler.prototype.flush = function (action) {\n    var actions = this.actions;\n\n    if (this.active) {\n      actions.push(action);\n      return;\n    }\n\n    var error;\n    this.active = true;\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (action = actions.shift()); // exhaust the scheduler queue\n\n\n    this.active = false;\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n\n      throw error;\n    }\n  };\n\n  return AsyncScheduler;\n}(Scheduler_1.Scheduler);\n\nexports.AsyncScheduler = AsyncScheduler;","\"use strict\";\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n */\n\nvar Scheduler = function () {\n  function Scheduler(SchedulerAction, now) {\n    if (now === void 0) {\n      now = Scheduler.now;\n    }\n\n    this.SchedulerAction = SchedulerAction;\n    this.now = now;\n  }\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n\n\n  Scheduler.prototype.schedule = function (work, delay, state) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    return new this.SchedulerAction(this, work).schedule(state, delay);\n  };\n\n  Scheduler.now = Date.now ? Date.now : function () {\n    return +new Date();\n  };\n  return Scheduler;\n}();\n\nexports.Scheduler = Scheduler;","\"use strict\";\n\nvar Observable_1 = require('../../Observable');\n\nvar combineLatest_1 = require('../../operator/combineLatest');\n\nObservable_1.Observable.prototype.combineLatest = combineLatest_1.combineLatest;","\"use strict\";\n\nvar combineLatest_1 = require('../operators/combineLatest');\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from this Observable with values from\n * Observables passed as arguments. This is done by subscribing to each\n * Observable, in order, and collecting an array of each of the most recent\n * values any time any of the input Observables emits, then either taking that\n * array and passing it as arguments to an optional `project` function and\n * emitting the return value of that, or just emitting the array of recent\n * values directly if there is no `project` function.\n *\n * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = weight.combineLatest(height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method combineLatest\n * @owner Observable\n */\n\n\nfunction combineLatest() {\n  var observables = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    observables[_i - 0] = arguments[_i];\n  }\n\n  return combineLatest_1.combineLatest.apply(void 0, observables)(this);\n}\n\nexports.combineLatest = combineLatest;","\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) {\n    if (b.hasOwnProperty(p)) d[p] = b[p];\n  }\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar ArrayObservable_1 = require('../observable/ArrayObservable');\n\nvar isArray_1 = require('../util/isArray');\n\nvar OuterSubscriber_1 = require('../OuterSubscriber');\n\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n\nvar none = {};\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from this Observable with values from\n * Observables passed as arguments. This is done by subscribing to each\n * Observable, in order, and collecting an array of each of the most recent\n * values any time any of the input Observables emits, then either taking that\n * array and passing it as arguments to an optional `project` function and\n * emitting the return value of that, or just emitting the array of recent\n * values directly if there is no `project` function.\n *\n * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = weight.combineLatest(height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method combineLatest\n * @owner Observable\n */\n\nfunction combineLatest() {\n  var observables = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    observables[_i - 0] = arguments[_i];\n  }\n\n  var project = null;\n\n  if (typeof observables[observables.length - 1] === 'function') {\n    project = observables.pop();\n  } // if the first and only other argument besides the resultSelector is an array\n  // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n\n\n  if (observables.length === 1 && isArray_1.isArray(observables[0])) {\n    observables = observables[0].slice();\n  }\n\n  return function (source) {\n    return source.lift.call(new ArrayObservable_1.ArrayObservable([source].concat(observables)), new CombineLatestOperator(project));\n  };\n}\n\nexports.combineLatest = combineLatest;\n\nvar CombineLatestOperator = function () {\n  function CombineLatestOperator(project) {\n    this.project = project;\n  }\n\n  CombineLatestOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new CombineLatestSubscriber(subscriber, this.project));\n  };\n\n  return CombineLatestOperator;\n}();\n\nexports.CombineLatestOperator = CombineLatestOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\nvar CombineLatestSubscriber = function (_super) {\n  __extends(CombineLatestSubscriber, _super);\n\n  function CombineLatestSubscriber(destination, project) {\n    _super.call(this, destination);\n\n    this.project = project;\n    this.active = 0;\n    this.values = [];\n    this.observables = [];\n  }\n\n  CombineLatestSubscriber.prototype._next = function (observable) {\n    this.values.push(none);\n    this.observables.push(observable);\n  };\n\n  CombineLatestSubscriber.prototype._complete = function () {\n    var observables = this.observables;\n    var len = observables.length;\n\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      this.active = len;\n      this.toRespond = len;\n\n      for (var i = 0; i < len; i++) {\n        var observable = observables[i];\n        this.add(subscribeToResult_1.subscribeToResult(this, observable, observable, i));\n      }\n    }\n  };\n\n  CombineLatestSubscriber.prototype.notifyComplete = function (unused) {\n    if ((this.active -= 1) === 0) {\n      this.destination.complete();\n    }\n  };\n\n  CombineLatestSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n    var values = this.values;\n    var oldVal = values[outerIndex];\n    var toRespond = !this.toRespond ? 0 : oldVal === none ? --this.toRespond : this.toRespond;\n    values[outerIndex] = innerValue;\n\n    if (toRespond === 0) {\n      if (this.project) {\n        this._tryProject(values);\n      } else {\n        this.destination.next(values.slice());\n      }\n    }\n  };\n\n  CombineLatestSubscriber.prototype._tryProject = function (values) {\n    var result;\n\n    try {\n      result = this.project.apply(this, values);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    this.destination.next(result);\n  };\n\n  return CombineLatestSubscriber;\n}(OuterSubscriber_1.OuterSubscriber);\n\nexports.CombineLatestSubscriber = CombineLatestSubscriber;","\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) {\n    if (b.hasOwnProperty(p)) d[p] = b[p];\n  }\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar Subscriber_1 = require('./Subscriber');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\n\nvar InnerSubscriber = function (_super) {\n  __extends(InnerSubscriber, _super);\n\n  function InnerSubscriber(parent, outerValue, outerIndex) {\n    _super.call(this);\n\n    this.parent = parent;\n    this.outerValue = outerValue;\n    this.outerIndex = outerIndex;\n    this.index = 0;\n  }\n\n  InnerSubscriber.prototype._next = function (value) {\n    this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n  };\n\n  InnerSubscriber.prototype._error = function (error) {\n    this.parent.notifyError(error, this);\n    this.unsubscribe();\n  };\n\n  InnerSubscriber.prototype._complete = function () {\n    this.parent.notifyComplete(this);\n    this.unsubscribe();\n  };\n\n  return InnerSubscriber;\n}(Subscriber_1.Subscriber);\n\nexports.InnerSubscriber = InnerSubscriber;","\"use strict\";\n\nvar Observable_1 = require('../../Observable');\n\nvar startWith_1 = require('../../operator/startWith');\n\nObservable_1.Observable.prototype.startWith = startWith_1.startWith;","\"use strict\";\n\nvar startWith_1 = require('../operators/startWith');\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits the items you specify as arguments before it begins to emit\n * items emitted by the source Observable.\n *\n * <img src=\"./img/startWith.png\" width=\"100%\">\n *\n * @param {...T} values - Items you want the modified Observable to emit first.\n * @param {Scheduler} [scheduler] - A {@link IScheduler} to use for scheduling\n * the emissions of the `next` notifications.\n * @return {Observable} An Observable that emits the items in the specified Iterable and then emits the items\n * emitted by the source Observable.\n * @method startWith\n * @owner Observable\n */\n\n\nfunction startWith() {\n  var array = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    array[_i - 0] = arguments[_i];\n  }\n\n  return startWith_1.startWith.apply(void 0, array)(this);\n}\n\nexports.startWith = startWith;","\"use strict\";\n\nvar ArrayObservable_1 = require('../observable/ArrayObservable');\n\nvar ScalarObservable_1 = require('../observable/ScalarObservable');\n\nvar EmptyObservable_1 = require('../observable/EmptyObservable');\n\nvar concat_1 = require('../observable/concat');\n\nvar isScheduler_1 = require('../util/isScheduler');\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits the items you specify as arguments before it begins to emit\n * items emitted by the source Observable.\n *\n * <img src=\"./img/startWith.png\" width=\"100%\">\n *\n * @param {...T} values - Items you want the modified Observable to emit first.\n * @param {Scheduler} [scheduler] - A {@link IScheduler} to use for scheduling\n * the emissions of the `next` notifications.\n * @return {Observable} An Observable that emits the items in the specified Iterable and then emits the items\n * emitted by the source Observable.\n * @method startWith\n * @owner Observable\n */\n\n\nfunction startWith() {\n  var array = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    array[_i - 0] = arguments[_i];\n  }\n\n  return function (source) {\n    var scheduler = array[array.length - 1];\n\n    if (isScheduler_1.isScheduler(scheduler)) {\n      array.pop();\n    } else {\n      scheduler = null;\n    }\n\n    var len = array.length;\n\n    if (len === 1) {\n      return concat_1.concat(new ScalarObservable_1.ScalarObservable(array[0], scheduler), source);\n    } else if (len > 1) {\n      return concat_1.concat(new ArrayObservable_1.ArrayObservable(array, scheduler), source);\n    } else {\n      return concat_1.concat(new EmptyObservable_1.EmptyObservable(scheduler), source);\n    }\n  };\n}\n\nexports.startWith = startWith;","\"use strict\";\n\nvar isScheduler_1 = require('../util/isScheduler');\n\nvar of_1 = require('./of');\n\nvar from_1 = require('./from');\n\nvar concatAll_1 = require('../operators/concatAll');\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an output Observable which sequentially emits all values from given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = Rx.Observable.concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n *\n *\n * @example <caption>Concatenate an array of 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = Rx.Observable.concat([timer1, timer2, timer3]); // note that array is passed\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n *\n *\n * @example <caption>Concatenate the same Observable to repeat it</caption>\n * const timer = Rx.Observable.interval(1000).take(2);\n *\n * Rx.Observable.concat(timer, timer) // concating the same Observable!\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('...and it is done!')\n * );\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // \"...and it is done!\" also after 4s\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {ObservableInput} input1 An input Observable to concatenate with others.\n * @param {ObservableInput} input2 An input Observable to concatenate with others.\n * More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @static true\n * @name concat\n * @owner Observable\n */\n\n\nfunction concat() {\n  var observables = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    observables[_i - 0] = arguments[_i];\n  }\n\n  if (observables.length === 1 || observables.length === 2 && isScheduler_1.isScheduler(observables[1])) {\n    return from_1.from(observables[0]);\n  }\n\n  return concatAll_1.concatAll()(of_1.of.apply(void 0, observables));\n}\n\nexports.concat = concat;","\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) {\n    if (b.hasOwnProperty(p)) d[p] = b[p];\n  }\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar isArray_1 = require('../util/isArray');\n\nvar isArrayLike_1 = require('../util/isArrayLike');\n\nvar isPromise_1 = require('../util/isPromise');\n\nvar PromiseObservable_1 = require('./PromiseObservable');\n\nvar IteratorObservable_1 = require('./IteratorObservable');\n\nvar ArrayObservable_1 = require('./ArrayObservable');\n\nvar ArrayLikeObservable_1 = require('./ArrayLikeObservable');\n\nvar iterator_1 = require('../symbol/iterator');\n\nvar Observable_1 = require('../Observable');\n\nvar observeOn_1 = require('../operators/observeOn');\n\nvar observable_1 = require('../symbol/observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\n\n\nvar FromObservable = function (_super) {\n  __extends(FromObservable, _super);\n\n  function FromObservable(ish, scheduler) {\n    _super.call(this, null);\n\n    this.ish = ish;\n    this.scheduler = scheduler;\n  }\n  /**\n   * Creates an Observable from an Array, an array-like object, a Promise, an\n   * iterable object, or an Observable-like object.\n   *\n   * <span class=\"informal\">Converts almost anything to an Observable.</span>\n   *\n   * <img src=\"./img/from.png\" width=\"100%\">\n   *\n   * Convert various other objects and data types into Observables. `from`\n   * converts a Promise or an array-like or an\n   * [iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable)\n   * object into an Observable that emits the items in that promise or array or\n   * iterable. A String, in this context, is treated as an array of characters.\n   * Observable-like objects (contains a function named with the ES2015 Symbol\n   * for Observable) can also be converted through this operator.\n   *\n   * @example <caption>Converts an array to an Observable</caption>\n   * var array = [10, 20, 30];\n   * var result = Rx.Observable.from(array);\n   * result.subscribe(x => console.log(x));\n   *\n   * // Results in the following:\n   * // 10 20 30\n   *\n   * @example <caption>Convert an infinite iterable (from a generator) to an Observable</caption>\n   * function* generateDoubles(seed) {\n   *   var i = seed;\n   *   while (true) {\n   *     yield i;\n   *     i = 2 * i; // double it\n   *   }\n   * }\n   *\n   * var iterator = generateDoubles(3);\n   * var result = Rx.Observable.from(iterator).take(10);\n   * result.subscribe(x => console.log(x));\n   *\n   * // Results in the following:\n   * // 3 6 12 24 48 96 192 384 768 1536\n   *\n   * @see {@link create}\n   * @see {@link fromEvent}\n   * @see {@link fromEventPattern}\n   * @see {@link fromPromise}\n   *\n   * @param {ObservableInput<T>} ish A subscribable object, a Promise, an\n   * Observable-like, an Array, an iterable or an array-like object to be\n   * converted.\n   * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n   * emissions of values.\n   * @return {Observable<T>} The Observable whose values are originally from the\n   * input object that was converted.\n   * @static true\n   * @name from\n   * @owner Observable\n   */\n\n\n  FromObservable.create = function (ish, scheduler) {\n    if (ish != null) {\n      if (typeof ish[observable_1.observable] === 'function') {\n        if (ish instanceof Observable_1.Observable && !scheduler) {\n          return ish;\n        }\n\n        return new FromObservable(ish, scheduler);\n      } else if (isArray_1.isArray(ish)) {\n        return new ArrayObservable_1.ArrayObservable(ish, scheduler);\n      } else if (isPromise_1.isPromise(ish)) {\n        return new PromiseObservable_1.PromiseObservable(ish, scheduler);\n      } else if (typeof ish[iterator_1.iterator] === 'function' || typeof ish === 'string') {\n        return new IteratorObservable_1.IteratorObservable(ish, scheduler);\n      } else if (isArrayLike_1.isArrayLike(ish)) {\n        return new ArrayLikeObservable_1.ArrayLikeObservable(ish, scheduler);\n      }\n    }\n\n    throw new TypeError((ish !== null && typeof ish || ish) + ' is not observable');\n  };\n  /** @deprecated internal use only */\n\n\n  FromObservable.prototype._subscribe = function (subscriber) {\n    var ish = this.ish;\n    var scheduler = this.scheduler;\n\n    if (scheduler == null) {\n      return ish[observable_1.observable]().subscribe(subscriber);\n    } else {\n      return ish[observable_1.observable]().subscribe(new observeOn_1.ObserveOnSubscriber(subscriber, scheduler, 0));\n    }\n  };\n\n  return FromObservable;\n}(Observable_1.Observable);\n\nexports.FromObservable = FromObservable;","\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) {\n    if (b.hasOwnProperty(p)) d[p] = b[p];\n  }\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar root_1 = require('../util/root');\n\nvar Observable_1 = require('../Observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\n\n\nvar PromiseObservable = function (_super) {\n  __extends(PromiseObservable, _super);\n\n  function PromiseObservable(promise, scheduler) {\n    _super.call(this);\n\n    this.promise = promise;\n    this.scheduler = scheduler;\n  }\n  /**\n   * Converts a Promise to an Observable.\n   *\n   * <span class=\"informal\">Returns an Observable that just emits the Promise's\n   * resolved value, then completes.</span>\n   *\n   * Converts an ES2015 Promise or a Promises/A+ spec compliant Promise to an\n   * Observable. If the Promise resolves with a value, the output Observable\n   * emits that resolved value as a `next`, and then completes. If the Promise\n   * is rejected, then the output Observable emits the corresponding Error.\n   *\n   * @example <caption>Convert the Promise returned by Fetch to an Observable</caption>\n   * var result = Rx.Observable.fromPromise(fetch('http://myserver.com/'));\n   * result.subscribe(x => console.log(x), e => console.error(e));\n   *\n   * @see {@link bindCallback}\n   * @see {@link from}\n   *\n   * @param {PromiseLike<T>} promise The promise to be converted.\n   * @param {Scheduler} [scheduler] An optional IScheduler to use for scheduling\n   * the delivery of the resolved value (or the rejection).\n   * @return {Observable<T>} An Observable which wraps the Promise.\n   * @static true\n   * @name fromPromise\n   * @owner Observable\n   */\n\n\n  PromiseObservable.create = function (promise, scheduler) {\n    return new PromiseObservable(promise, scheduler);\n  };\n  /** @deprecated internal use only */\n\n\n  PromiseObservable.prototype._subscribe = function (subscriber) {\n    var _this = this;\n\n    var promise = this.promise;\n    var scheduler = this.scheduler;\n\n    if (scheduler == null) {\n      if (this._isScalar) {\n        if (!subscriber.closed) {\n          subscriber.next(this.value);\n          subscriber.complete();\n        }\n      } else {\n        promise.then(function (value) {\n          _this.value = value;\n          _this._isScalar = true;\n\n          if (!subscriber.closed) {\n            subscriber.next(value);\n            subscriber.complete();\n          }\n        }, function (err) {\n          if (!subscriber.closed) {\n            subscriber.error(err);\n          }\n        }).then(null, function (err) {\n          // escape the promise trap, throw unhandled errors\n          root_1.root.setTimeout(function () {\n            throw err;\n          });\n        });\n      }\n    } else {\n      if (this._isScalar) {\n        if (!subscriber.closed) {\n          return scheduler.schedule(dispatchNext, 0, {\n            value: this.value,\n            subscriber: subscriber\n          });\n        }\n      } else {\n        promise.then(function (value) {\n          _this.value = value;\n          _this._isScalar = true;\n\n          if (!subscriber.closed) {\n            subscriber.add(scheduler.schedule(dispatchNext, 0, {\n              value: value,\n              subscriber: subscriber\n            }));\n          }\n        }, function (err) {\n          if (!subscriber.closed) {\n            subscriber.add(scheduler.schedule(dispatchError, 0, {\n              err: err,\n              subscriber: subscriber\n            }));\n          }\n        }).then(null, function (err) {\n          // escape the promise trap, throw unhandled errors\n          root_1.root.setTimeout(function () {\n            throw err;\n          });\n        });\n      }\n    }\n  };\n\n  return PromiseObservable;\n}(Observable_1.Observable);\n\nexports.PromiseObservable = PromiseObservable;\n\nfunction dispatchNext(arg) {\n  var value = arg.value,\n      subscriber = arg.subscriber;\n\n  if (!subscriber.closed) {\n    subscriber.next(value);\n    subscriber.complete();\n  }\n}\n\nfunction dispatchError(arg) {\n  var err = arg.err,\n      subscriber = arg.subscriber;\n\n  if (!subscriber.closed) {\n    subscriber.error(err);\n  }\n}","\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) {\n    if (b.hasOwnProperty(p)) d[p] = b[p];\n  }\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar root_1 = require('../util/root');\n\nvar Observable_1 = require('../Observable');\n\nvar iterator_1 = require('../symbol/iterator');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\n\n\nvar IteratorObservable = function (_super) {\n  __extends(IteratorObservable, _super);\n\n  function IteratorObservable(iterator, scheduler) {\n    _super.call(this);\n\n    this.scheduler = scheduler;\n\n    if (iterator == null) {\n      throw new Error('iterator cannot be null.');\n    }\n\n    this.iterator = getIterator(iterator);\n  }\n\n  IteratorObservable.create = function (iterator, scheduler) {\n    return new IteratorObservable(iterator, scheduler);\n  };\n\n  IteratorObservable.dispatch = function (state) {\n    var index = state.index,\n        hasError = state.hasError,\n        iterator = state.iterator,\n        subscriber = state.subscriber;\n\n    if (hasError) {\n      subscriber.error(state.error);\n      return;\n    }\n\n    var result = iterator.next();\n\n    if (result.done) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(result.value);\n    state.index = index + 1;\n\n    if (subscriber.closed) {\n      if (typeof iterator.return === 'function') {\n        iterator.return();\n      }\n\n      return;\n    }\n\n    this.schedule(state);\n  };\n  /** @deprecated internal use only */\n\n\n  IteratorObservable.prototype._subscribe = function (subscriber) {\n    var index = 0;\n\n    var _a = this,\n        iterator = _a.iterator,\n        scheduler = _a.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(IteratorObservable.dispatch, 0, {\n        index: index,\n        iterator: iterator,\n        subscriber: subscriber\n      });\n    } else {\n      do {\n        var result = iterator.next();\n\n        if (result.done) {\n          subscriber.complete();\n          break;\n        } else {\n          subscriber.next(result.value);\n        }\n\n        if (subscriber.closed) {\n          if (typeof iterator.return === 'function') {\n            iterator.return();\n          }\n\n          break;\n        }\n      } while (true);\n    }\n  };\n\n  return IteratorObservable;\n}(Observable_1.Observable);\n\nexports.IteratorObservable = IteratorObservable;\n\nvar StringIterator = function () {\n  function StringIterator(str, idx, len) {\n    if (idx === void 0) {\n      idx = 0;\n    }\n\n    if (len === void 0) {\n      len = str.length;\n    }\n\n    this.str = str;\n    this.idx = idx;\n    this.len = len;\n  }\n\n  StringIterator.prototype[iterator_1.iterator] = function () {\n    return this;\n  };\n\n  StringIterator.prototype.next = function () {\n    return this.idx < this.len ? {\n      done: false,\n      value: this.str.charAt(this.idx++)\n    } : {\n      done: true,\n      value: undefined\n    };\n  };\n\n  return StringIterator;\n}();\n\nvar ArrayIterator = function () {\n  function ArrayIterator(arr, idx, len) {\n    if (idx === void 0) {\n      idx = 0;\n    }\n\n    if (len === void 0) {\n      len = toLength(arr);\n    }\n\n    this.arr = arr;\n    this.idx = idx;\n    this.len = len;\n  }\n\n  ArrayIterator.prototype[iterator_1.iterator] = function () {\n    return this;\n  };\n\n  ArrayIterator.prototype.next = function () {\n    return this.idx < this.len ? {\n      done: false,\n      value: this.arr[this.idx++]\n    } : {\n      done: true,\n      value: undefined\n    };\n  };\n\n  return ArrayIterator;\n}();\n\nfunction getIterator(obj) {\n  var i = obj[iterator_1.iterator];\n\n  if (!i && typeof obj === 'string') {\n    return new StringIterator(obj);\n  }\n\n  if (!i && obj.length !== undefined) {\n    return new ArrayIterator(obj);\n  }\n\n  if (!i) {\n    throw new TypeError('object is not iterable');\n  }\n\n  return obj[iterator_1.iterator]();\n}\n\nvar maxSafeInteger = Math.pow(2, 53) - 1;\n\nfunction toLength(o) {\n  var len = +o.length;\n\n  if (isNaN(len)) {\n    return 0;\n  }\n\n  if (len === 0 || !numberIsFinite(len)) {\n    return len;\n  }\n\n  len = sign(len) * Math.floor(Math.abs(len));\n\n  if (len <= 0) {\n    return 0;\n  }\n\n  if (len > maxSafeInteger) {\n    return maxSafeInteger;\n  }\n\n  return len;\n}\n\nfunction numberIsFinite(value) {\n  return typeof value === 'number' && root_1.root.isFinite(value);\n}\n\nfunction sign(value) {\n  var valueAsNumber = +value;\n\n  if (valueAsNumber === 0) {\n    return valueAsNumber;\n  }\n\n  if (isNaN(valueAsNumber)) {\n    return valueAsNumber;\n  }\n\n  return valueAsNumber < 0 ? -1 : 1;\n}","\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) {\n    if (b.hasOwnProperty(p)) d[p] = b[p];\n  }\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar Observable_1 = require('../Observable');\n\nvar ScalarObservable_1 = require('./ScalarObservable');\n\nvar EmptyObservable_1 = require('./EmptyObservable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\n\n\nvar ArrayLikeObservable = function (_super) {\n  __extends(ArrayLikeObservable, _super);\n\n  function ArrayLikeObservable(arrayLike, scheduler) {\n    _super.call(this);\n\n    this.arrayLike = arrayLike;\n    this.scheduler = scheduler;\n\n    if (!scheduler && arrayLike.length === 1) {\n      this._isScalar = true;\n      this.value = arrayLike[0];\n    }\n  }\n\n  ArrayLikeObservable.create = function (arrayLike, scheduler) {\n    var length = arrayLike.length;\n\n    if (length === 0) {\n      return new EmptyObservable_1.EmptyObservable();\n    } else if (length === 1) {\n      return new ScalarObservable_1.ScalarObservable(arrayLike[0], scheduler);\n    } else {\n      return new ArrayLikeObservable(arrayLike, scheduler);\n    }\n  };\n\n  ArrayLikeObservable.dispatch = function (state) {\n    var arrayLike = state.arrayLike,\n        index = state.index,\n        length = state.length,\n        subscriber = state.subscriber;\n\n    if (subscriber.closed) {\n      return;\n    }\n\n    if (index >= length) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(arrayLike[index]);\n    state.index = index + 1;\n    this.schedule(state);\n  };\n  /** @deprecated internal use only */\n\n\n  ArrayLikeObservable.prototype._subscribe = function (subscriber) {\n    var index = 0;\n\n    var _a = this,\n        arrayLike = _a.arrayLike,\n        scheduler = _a.scheduler;\n\n    var length = arrayLike.length;\n\n    if (scheduler) {\n      return scheduler.schedule(ArrayLikeObservable.dispatch, 0, {\n        arrayLike: arrayLike,\n        index: index,\n        length: length,\n        subscriber: subscriber\n      });\n    } else {\n      for (var i = 0; i < length && !subscriber.closed; i++) {\n        subscriber.next(arrayLike[i]);\n      }\n\n      subscriber.complete();\n    }\n  };\n\n  return ArrayLikeObservable;\n}(Observable_1.Observable);\n\nexports.ArrayLikeObservable = ArrayLikeObservable;","\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) {\n    if (b.hasOwnProperty(p)) d[p] = b[p];\n  }\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar Subscriber_1 = require('../Subscriber');\n\nvar Notification_1 = require('../Notification');\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * @example <caption>Ensure values in subscribe are called just before browser repaint.</caption>\n * const intervals = Rx.Observable.interval(10); // Intervals are scheduled\n *                                               // with async scheduler by default...\n *\n * intervals\n * .observeOn(Rx.Scheduler.animationFrame)       // ...but we will observe on animationFrame\n * .subscribe(val => {                           // scheduler to ensure smooth animation.\n *   someDiv.style.height = val + 'px';\n * });\n *\n * @see {@link delay}\n *\n * @param {IScheduler} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\n\n\nfunction observeOn(scheduler, delay) {\n  if (delay === void 0) {\n    delay = 0;\n  }\n\n  return function observeOnOperatorFunction(source) {\n    return source.lift(new ObserveOnOperator(scheduler, delay));\n  };\n}\n\nexports.observeOn = observeOn;\n\nvar ObserveOnOperator = function () {\n  function ObserveOnOperator(scheduler, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    this.scheduler = scheduler;\n    this.delay = delay;\n  }\n\n  ObserveOnOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n  };\n\n  return ObserveOnOperator;\n}();\n\nexports.ObserveOnOperator = ObserveOnOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\nvar ObserveOnSubscriber = function (_super) {\n  __extends(ObserveOnSubscriber, _super);\n\n  function ObserveOnSubscriber(destination, scheduler, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    _super.call(this, destination);\n\n    this.scheduler = scheduler;\n    this.delay = delay;\n  }\n\n  ObserveOnSubscriber.dispatch = function (arg) {\n    var notification = arg.notification,\n        destination = arg.destination;\n    notification.observe(destination);\n    this.unsubscribe();\n  };\n\n  ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {\n    this.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));\n  };\n\n  ObserveOnSubscriber.prototype._next = function (value) {\n    this.scheduleMessage(Notification_1.Notification.createNext(value));\n  };\n\n  ObserveOnSubscriber.prototype._error = function (err) {\n    this.scheduleMessage(Notification_1.Notification.createError(err));\n  };\n\n  ObserveOnSubscriber.prototype._complete = function () {\n    this.scheduleMessage(Notification_1.Notification.createComplete());\n  };\n\n  return ObserveOnSubscriber;\n}(Subscriber_1.Subscriber);\n\nexports.ObserveOnSubscriber = ObserveOnSubscriber;\n\nvar ObserveOnMessage = function () {\n  function ObserveOnMessage(notification, destination) {\n    this.notification = notification;\n    this.destination = destination;\n  }\n\n  return ObserveOnMessage;\n}();\n\nexports.ObserveOnMessage = ObserveOnMessage;","\"use strict\";\n\nvar mergeAll_1 = require('./mergeAll');\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * <img src=\"./img/concatAll.png\" width=\"100%\">\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev => Rx.Observable.interval(1000).take(4));\n * var firstOrder = higherOrder.concatAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link combineAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable emitting values from all the inner\n * Observables concatenated.\n * @method concatAll\n * @owner Observable\n */\n\n\nfunction concatAll() {\n  return mergeAll_1.mergeAll(1);\n}\n\nexports.concatAll = concatAll;","\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) {\n    if (b.hasOwnProperty(p)) d[p] = b[p];\n  }\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n\nvar OuterSubscriber_1 = require('../OuterSubscriber');\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\n\n\nfunction mergeMap(project, resultSelector, concurrent) {\n  if (concurrent === void 0) {\n    concurrent = Number.POSITIVE_INFINITY;\n  }\n\n  return function mergeMapOperatorFunction(source) {\n    if (typeof resultSelector === 'number') {\n      concurrent = resultSelector;\n      resultSelector = null;\n    }\n\n    return source.lift(new MergeMapOperator(project, resultSelector, concurrent));\n  };\n}\n\nexports.mergeMap = mergeMap;\n\nvar MergeMapOperator = function () {\n  function MergeMapOperator(project, resultSelector, concurrent) {\n    if (concurrent === void 0) {\n      concurrent = Number.POSITIVE_INFINITY;\n    }\n\n    this.project = project;\n    this.resultSelector = resultSelector;\n    this.concurrent = concurrent;\n  }\n\n  MergeMapOperator.prototype.call = function (observer, source) {\n    return source.subscribe(new MergeMapSubscriber(observer, this.project, this.resultSelector, this.concurrent));\n  };\n\n  return MergeMapOperator;\n}();\n\nexports.MergeMapOperator = MergeMapOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\nvar MergeMapSubscriber = function (_super) {\n  __extends(MergeMapSubscriber, _super);\n\n  function MergeMapSubscriber(destination, project, resultSelector, concurrent) {\n    if (concurrent === void 0) {\n      concurrent = Number.POSITIVE_INFINITY;\n    }\n\n    _super.call(this, destination);\n\n    this.project = project;\n    this.resultSelector = resultSelector;\n    this.concurrent = concurrent;\n    this.hasCompleted = false;\n    this.buffer = [];\n    this.active = 0;\n    this.index = 0;\n  }\n\n  MergeMapSubscriber.prototype._next = function (value) {\n    if (this.active < this.concurrent) {\n      this._tryNext(value);\n    } else {\n      this.buffer.push(value);\n    }\n  };\n\n  MergeMapSubscriber.prototype._tryNext = function (value) {\n    var result;\n    var index = this.index++;\n\n    try {\n      result = this.project(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    this.active++;\n\n    this._innerSub(result, value, index);\n  };\n\n  MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {\n    this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));\n  };\n\n  MergeMapSubscriber.prototype._complete = function () {\n    this.hasCompleted = true;\n\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete();\n    }\n  };\n\n  MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n    if (this.resultSelector) {\n      this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      this.destination.next(innerValue);\n    }\n  };\n\n  MergeMapSubscriber.prototype._notifyResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {\n    var result;\n\n    try {\n      result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    this.destination.next(result);\n  };\n\n  MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {\n    var buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete();\n    }\n  };\n\n  return MergeMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber);\n\nexports.MergeMapSubscriber = MergeMapSubscriber;","\"use strict\";\n\nvar Observable_1 = require('../../Observable');\n\nvar switchMapTo_1 = require('../../operator/switchMapTo');\n\nObservable_1.Observable.prototype.switchMapTo = switchMapTo_1.switchMapTo;","\"use strict\";\n\nvar switchMapTo_1 = require('../operators/switchMapTo');\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switch} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/switchMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link switch}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable, and taking only the values\n * from the most recently projected inner Observable.\n * @method switchMapTo\n * @owner Observable\n */\n\n\nfunction switchMapTo(innerObservable, resultSelector) {\n  return switchMapTo_1.switchMapTo(innerObservable, resultSelector)(this);\n}\n\nexports.switchMapTo = switchMapTo;","\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) {\n    if (b.hasOwnProperty(p)) d[p] = b[p];\n  }\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar OuterSubscriber_1 = require('../OuterSubscriber');\n\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switch} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/switchMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link switch}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable, and taking only the values\n * from the most recently projected inner Observable.\n * @method switchMapTo\n * @owner Observable\n */\n\n\nfunction switchMapTo(innerObservable, resultSelector) {\n  return function (source) {\n    return source.lift(new SwitchMapToOperator(innerObservable, resultSelector));\n  };\n}\n\nexports.switchMapTo = switchMapTo;\n\nvar SwitchMapToOperator = function () {\n  function SwitchMapToOperator(observable, resultSelector) {\n    this.observable = observable;\n    this.resultSelector = resultSelector;\n  }\n\n  SwitchMapToOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new SwitchMapToSubscriber(subscriber, this.observable, this.resultSelector));\n  };\n\n  return SwitchMapToOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\n\nvar SwitchMapToSubscriber = function (_super) {\n  __extends(SwitchMapToSubscriber, _super);\n\n  function SwitchMapToSubscriber(destination, inner, resultSelector) {\n    _super.call(this, destination);\n\n    this.inner = inner;\n    this.resultSelector = resultSelector;\n    this.index = 0;\n  }\n\n  SwitchMapToSubscriber.prototype._next = function (value) {\n    var innerSubscription = this.innerSubscription;\n\n    if (innerSubscription) {\n      innerSubscription.unsubscribe();\n    }\n\n    this.add(this.innerSubscription = subscribeToResult_1.subscribeToResult(this, this.inner, value, this.index++));\n  };\n\n  SwitchMapToSubscriber.prototype._complete = function () {\n    var innerSubscription = this.innerSubscription;\n\n    if (!innerSubscription || innerSubscription.closed) {\n      _super.prototype._complete.call(this);\n    }\n  };\n  /** @deprecated internal use only */\n\n\n  SwitchMapToSubscriber.prototype._unsubscribe = function () {\n    this.innerSubscription = null;\n  };\n\n  SwitchMapToSubscriber.prototype.notifyComplete = function (innerSub) {\n    this.remove(innerSub);\n    this.innerSubscription = null;\n\n    if (this.isStopped) {\n      _super.prototype._complete.call(this);\n    }\n  };\n\n  SwitchMapToSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n    var _a = this,\n        resultSelector = _a.resultSelector,\n        destination = _a.destination;\n\n    if (resultSelector) {\n      this.tryResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      destination.next(innerValue);\n    }\n  };\n\n  SwitchMapToSubscriber.prototype.tryResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {\n    var _a = this,\n        resultSelector = _a.resultSelector,\n        destination = _a.destination;\n\n    var result;\n\n    try {\n      result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n\n    destination.next(result);\n  };\n\n  return SwitchMapToSubscriber;\n}(OuterSubscriber_1.OuterSubscriber);","\"use strict\";\n\nvar Observable_1 = require('../../Observable');\n\nvar delay_1 = require('../../operator/delay');\n\nObservable_1.Observable.prototype.delay = delay_1.delay;","\"use strict\";\n\nvar async_1 = require('../scheduler/async');\n\nvar delay_1 = require('../operators/delay');\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * <img src=\"./img/delay.png\" width=\"100%\">\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * @example <caption>Delay each click by one second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @example <caption>Delay all clicks until a future date happens</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var date = new Date('March 15, 2050 12:00:00'); // in the future\n * var delayedClicks = clicks.delay(date); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n *\n * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {Scheduler} [scheduler=async] The IScheduler to use for\n * managing the timers that handle the time-shift for each item.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified timeout or Date.\n * @method delay\n * @owner Observable\n */\n\n\nfunction delay(delay, scheduler) {\n  if (scheduler === void 0) {\n    scheduler = async_1.async;\n  }\n\n  return delay_1.delay(delay, scheduler)(this);\n}\n\nexports.delay = delay;","\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) {\n    if (b.hasOwnProperty(p)) d[p] = b[p];\n  }\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar async_1 = require('../scheduler/async');\n\nvar isDate_1 = require('../util/isDate');\n\nvar Subscriber_1 = require('../Subscriber');\n\nvar Notification_1 = require('../Notification');\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * <img src=\"./img/delay.png\" width=\"100%\">\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * @example <caption>Delay each click by one second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @example <caption>Delay all clicks until a future date happens</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var date = new Date('March 15, 2050 12:00:00'); // in the future\n * var delayedClicks = clicks.delay(date); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n *\n * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {Scheduler} [scheduler=async] The IScheduler to use for\n * managing the timers that handle the time-shift for each item.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified timeout or Date.\n * @method delay\n * @owner Observable\n */\n\n\nfunction delay(delay, scheduler) {\n  if (scheduler === void 0) {\n    scheduler = async_1.async;\n  }\n\n  var absoluteDelay = isDate_1.isDate(delay);\n  var delayFor = absoluteDelay ? +delay - scheduler.now() : Math.abs(delay);\n  return function (source) {\n    return source.lift(new DelayOperator(delayFor, scheduler));\n  };\n}\n\nexports.delay = delay;\n\nvar DelayOperator = function () {\n  function DelayOperator(delay, scheduler) {\n    this.delay = delay;\n    this.scheduler = scheduler;\n  }\n\n  DelayOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n  };\n\n  return DelayOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\n\nvar DelaySubscriber = function (_super) {\n  __extends(DelaySubscriber, _super);\n\n  function DelaySubscriber(destination, delay, scheduler) {\n    _super.call(this, destination);\n\n    this.delay = delay;\n    this.scheduler = scheduler;\n    this.queue = [];\n    this.active = false;\n    this.errored = false;\n  }\n\n  DelaySubscriber.dispatch = function (state) {\n    var source = state.source;\n    var queue = source.queue;\n    var scheduler = state.scheduler;\n    var destination = state.destination;\n\n    while (queue.length > 0 && queue[0].time - scheduler.now() <= 0) {\n      queue.shift().notification.observe(destination);\n    }\n\n    if (queue.length > 0) {\n      var delay_1 = Math.max(0, queue[0].time - scheduler.now());\n      this.schedule(state, delay_1);\n    } else {\n      this.unsubscribe();\n      source.active = false;\n    }\n  };\n\n  DelaySubscriber.prototype._schedule = function (scheduler) {\n    this.active = true;\n    this.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {\n      source: this,\n      destination: this.destination,\n      scheduler: scheduler\n    }));\n  };\n\n  DelaySubscriber.prototype.scheduleNotification = function (notification) {\n    if (this.errored === true) {\n      return;\n    }\n\n    var scheduler = this.scheduler;\n    var message = new DelayMessage(scheduler.now() + this.delay, notification);\n    this.queue.push(message);\n\n    if (this.active === false) {\n      this._schedule(scheduler);\n    }\n  };\n\n  DelaySubscriber.prototype._next = function (value) {\n    this.scheduleNotification(Notification_1.Notification.createNext(value));\n  };\n\n  DelaySubscriber.prototype._error = function (err) {\n    this.errored = true;\n    this.queue = [];\n    this.destination.error(err);\n  };\n\n  DelaySubscriber.prototype._complete = function () {\n    this.scheduleNotification(Notification_1.Notification.createComplete());\n  };\n\n  return DelaySubscriber;\n}(Subscriber_1.Subscriber);\n\nvar DelayMessage = function () {\n  function DelayMessage(time, notification) {\n    this.time = time;\n    this.notification = notification;\n  }\n\n  return DelayMessage;\n}();","\"use strict\";\n\nfunction isDate(value) {\n  return value instanceof Date && !isNaN(+value);\n}\n\nexports.isDate = isDate;","\"use strict\";\n\nvar Observable_1 = require('../../Observable');\n\nvar merge_1 = require('../../operator/merge');\n\nObservable_1.Observable.prototype.merge = merge_1.merge;","\"use strict\";\n\nvar merge_1 = require('../operators/merge');\n\nvar merge_2 = require('../observable/merge');\n\nexports.mergeStatic = merge_2.merge;\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (either the source or an\n * Observable given as argument), and simply forwards (without doing any\n * transformation) all the values from all the input Observables to the output\n * Observable. The output Observable only completes once all input Observables\n * have completed. Any error delivered by an input Observable will be immediately\n * emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = clicks.merge(timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = timer1.merge(timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {ObservableInput} other An input Observable to merge with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} An Observable that emits items that are the result of\n * every input Observable.\n * @method merge\n * @owner Observable\n */\n\nfunction merge() {\n  var observables = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    observables[_i - 0] = arguments[_i];\n  }\n\n  return merge_1.merge.apply(void 0, observables)(this);\n}\n\nexports.merge = merge;","\"use strict\";\n\nvar merge_1 = require('../observable/merge');\n\nvar merge_2 = require('../observable/merge');\n\nexports.mergeStatic = merge_2.merge;\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (either the source or an\n * Observable given as argument), and simply forwards (without doing any\n * transformation) all the values from all the input Observables to the output\n * Observable. The output Observable only completes once all input Observables\n * have completed. Any error delivered by an input Observable will be immediately\n * emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = clicks.merge(timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = timer1.merge(timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {ObservableInput} other An input Observable to merge with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} An Observable that emits items that are the result of\n * every input Observable.\n * @method merge\n * @owner Observable\n */\n\nfunction merge() {\n  var observables = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    observables[_i - 0] = arguments[_i];\n  }\n\n  return function (source) {\n    return source.lift.call(merge_1.merge.apply(void 0, [source].concat(observables)));\n  };\n}\n\nexports.merge = merge;","\"use strict\";\n\nvar Observable_1 = require('../../Observable');\n\nvar filter_1 = require('../../operator/filter');\n\nObservable_1.Observable.prototype.filter = filter_1.filter;","\"use strict\";\n\nvar filter_1 = require('../operators/filter');\n/* tslint:enable:max-line-length */\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\n\n\nfunction filter(predicate, thisArg) {\n  return filter_1.filter(predicate, thisArg)(this);\n}\n\nexports.filter = filter;","\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) {\n    if (b.hasOwnProperty(p)) d[p] = b[p];\n  }\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar Subscriber_1 = require('../Subscriber');\n/* tslint:enable:max-line-length */\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\n\n\nfunction filter(predicate, thisArg) {\n  return function filterOperatorFunction(source) {\n    return source.lift(new FilterOperator(predicate, thisArg));\n  };\n}\n\nexports.filter = filter;\n\nvar FilterOperator = function () {\n  function FilterOperator(predicate, thisArg) {\n    this.predicate = predicate;\n    this.thisArg = thisArg;\n  }\n\n  FilterOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n  };\n\n  return FilterOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\n\nvar FilterSubscriber = function (_super) {\n  __extends(FilterSubscriber, _super);\n\n  function FilterSubscriber(destination, predicate, thisArg) {\n    _super.call(this, destination);\n\n    this.predicate = predicate;\n    this.thisArg = thisArg;\n    this.count = 0;\n  } // the try catch block below is left specifically for\n  // optimization and perf reasons. a tryCatcher is not necessary here.\n\n\n  FilterSubscriber.prototype._next = function (value) {\n    var result;\n\n    try {\n      result = this.predicate.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    if (result) {\n      this.destination.next(value);\n    }\n  };\n\n  return FilterSubscriber;\n}(Subscriber_1.Subscriber);","\"use strict\";\n\nvar Observable_1 = require('../../Observable');\n\nvar switchMap_1 = require('../../operator/switchMap');\n\nObservable_1.Observable.prototype.switchMap = switchMap_1.switchMap;","\"use strict\";\n\nvar switchMap_1 = require('../operators/switchMap');\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\n\n\nfunction switchMap(project, resultSelector) {\n  return switchMap_1.switchMap(project, resultSelector)(this);\n}\n\nexports.switchMap = switchMap;","\"use strict\";\n\nvar Observable_1 = require('../../Observable');\n\nvar mapTo_1 = require('../../operator/mapTo');\n\nObservable_1.Observable.prototype.mapTo = mapTo_1.mapTo;","\"use strict\";\n\nvar mapTo_1 = require('../operators/mapTo');\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * <img src=\"./img/mapTo.png\" width=\"100%\">\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * @example <caption>Map every click to the string 'Hi'</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var greetings = clicks.mapTo('Hi');\n * greetings.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {any} value The value to map each source value to.\n * @return {Observable} An Observable that emits the given `value` every time\n * the source Observable emits something.\n * @method mapTo\n * @owner Observable\n */\n\n\nfunction mapTo(value) {\n  return mapTo_1.mapTo(value)(this);\n}\n\nexports.mapTo = mapTo;","\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) {\n    if (b.hasOwnProperty(p)) d[p] = b[p];\n  }\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * <img src=\"./img/mapTo.png\" width=\"100%\">\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * @example <caption>Map every click to the string 'Hi'</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var greetings = clicks.mapTo('Hi');\n * greetings.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {any} value The value to map each source value to.\n * @return {Observable} An Observable that emits the given `value` every time\n * the source Observable emits something.\n * @method mapTo\n * @owner Observable\n */\n\n\nfunction mapTo(value) {\n  return function (source) {\n    return source.lift(new MapToOperator(value));\n  };\n}\n\nexports.mapTo = mapTo;\n\nvar MapToOperator = function () {\n  function MapToOperator(value) {\n    this.value = value;\n  }\n\n  MapToOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new MapToSubscriber(subscriber, this.value));\n  };\n\n  return MapToOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\n\nvar MapToSubscriber = function (_super) {\n  __extends(MapToSubscriber, _super);\n\n  function MapToSubscriber(destination, value) {\n    _super.call(this, destination);\n\n    this.value = value;\n  }\n\n  MapToSubscriber.prototype._next = function (x) {\n    this.destination.next(this.value);\n  };\n\n  return MapToSubscriber;\n}(Subscriber_1.Subscriber);","\"use strict\";\n\nvar Observable_1 = require('../../Observable');\n\nvar switch_1 = require('../../operator/switch');\n\nObservable_1.Observable.prototype.switch = switch_1._switch;\nObservable_1.Observable.prototype._switch = switch_1._switch;","\"use strict\";\n\nvar switchAll_1 = require('../operators/switchAll');\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * subscribing to only the most recently emitted of those inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * previous inner Observable once a new one appears.</span>\n *\n * <img src=\"./img/switch.png\" width=\"100%\">\n *\n * `switch` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable subscribes to the inner Observable and\n * begins emitting the items emitted by that. So far, it behaves\n * like {@link mergeAll}. However, when a new inner Observable is emitted,\n * `switch` unsubscribes from the earlier-emitted inner Observable and\n * subscribes to the new inner Observable and begins emitting items from it. It\n * continues to behave like this for subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * // Each click event is mapped to an Observable that ticks every second\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var switched = higherOrder.switch();\n * // The outcome is that `switched` is essentially a timer that restarts\n * // on every click. The interval Observables from older clicks do not merge\n * // with the current interval Observable.\n * switched.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switchMap}\n * @see {@link switchMapTo}\n * @see {@link zipAll}\n *\n * @return {Observable<T>} An Observable that emits the items emitted by the\n * Observable most recently emitted by the source Observable.\n * @method switch\n * @name switch\n * @owner Observable\n */\n\n\nfunction _switch() {\n  return switchAll_1.switchAll()(this);\n}\n\nexports._switch = _switch;","\"use strict\";\n\nvar switchMap_1 = require('./switchMap');\n\nvar identity_1 = require('../util/identity');\n\nfunction switchAll() {\n  return switchMap_1.switchMap(identity_1.identity);\n}\n\nexports.switchAll = switchAll;","\"use strict\";\n\nvar Observable_1 = require('../../Observable');\n\nvar map_1 = require('../../operator/map');\n\nObservable_1.Observable.prototype.map = map_1.map;","\"use strict\";\n\nvar map_1 = require('../operators/map');\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\n\n\nfunction map(project, thisArg) {\n  return map_1.map(project, thisArg)(this);\n}\n\nexports.map = map;","\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) {\n    if (b.hasOwnProperty(p)) d[p] = b[p];\n  }\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\n\n\nfunction map(project, thisArg) {\n  return function mapOperation(source) {\n    if (typeof project !== 'function') {\n      throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n\n    return source.lift(new MapOperator(project, thisArg));\n  };\n}\n\nexports.map = map;\n\nvar MapOperator = function () {\n  function MapOperator(project, thisArg) {\n    this.project = project;\n    this.thisArg = thisArg;\n  }\n\n  MapOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n  };\n\n  return MapOperator;\n}();\n\nexports.MapOperator = MapOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\nvar MapSubscriber = function (_super) {\n  __extends(MapSubscriber, _super);\n\n  function MapSubscriber(destination, project, thisArg) {\n    _super.call(this, destination);\n\n    this.project = project;\n    this.count = 0;\n    this.thisArg = thisArg || this;\n  } // NOTE: This looks unoptimized, but it's actually purposefully NOT\n  // using try/catch optimizations.\n\n\n  MapSubscriber.prototype._next = function (value) {\n    var result;\n\n    try {\n      result = this.project.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    this.destination.next(result);\n  };\n\n  return MapSubscriber;\n}(Subscriber_1.Subscriber);","\"use strict\";\n\nvar Observable_1 = require('../../Observable');\n\nvar distinctUntilChanged_1 = require('../../operator/distinctUntilChanged');\n\nObservable_1.Observable.prototype.distinctUntilChanged = distinctUntilChanged_1.distinctUntilChanged;","\"use strict\";\n\nvar distinctUntilChanged_1 = require('../operators/distinctUntilChanged');\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4)\n *   .distinctUntilChanged()\n *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4\n *\n * @example <caption>An example using a compare function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilChanged((p: Person, q: Person) => p.name === q.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\n\n\nfunction distinctUntilChanged(compare, keySelector) {\n  return distinctUntilChanged_1.distinctUntilChanged(compare, keySelector)(this);\n}\n\nexports.distinctUntilChanged = distinctUntilChanged;","\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) {\n    if (b.hasOwnProperty(p)) d[p] = b[p];\n  }\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar Subscriber_1 = require('../Subscriber');\n\nvar tryCatch_1 = require('../util/tryCatch');\n\nvar errorObject_1 = require('../util/errorObject');\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4)\n *   .distinctUntilChanged()\n *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4\n *\n * @example <caption>An example using a compare function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilChanged((p: Person, q: Person) => p.name === q.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\n\n\nfunction distinctUntilChanged(compare, keySelector) {\n  return function (source) {\n    return source.lift(new DistinctUntilChangedOperator(compare, keySelector));\n  };\n}\n\nexports.distinctUntilChanged = distinctUntilChanged;\n\nvar DistinctUntilChangedOperator = function () {\n  function DistinctUntilChangedOperator(compare, keySelector) {\n    this.compare = compare;\n    this.keySelector = keySelector;\n  }\n\n  DistinctUntilChangedOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n  };\n\n  return DistinctUntilChangedOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\n\nvar DistinctUntilChangedSubscriber = function (_super) {\n  __extends(DistinctUntilChangedSubscriber, _super);\n\n  function DistinctUntilChangedSubscriber(destination, compare, keySelector) {\n    _super.call(this, destination);\n\n    this.keySelector = keySelector;\n    this.hasKey = false;\n\n    if (typeof compare === 'function') {\n      this.compare = compare;\n    }\n  }\n\n  DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {\n    return x === y;\n  };\n\n  DistinctUntilChangedSubscriber.prototype._next = function (value) {\n    var keySelector = this.keySelector;\n    var key = value;\n\n    if (keySelector) {\n      key = tryCatch_1.tryCatch(this.keySelector)(value);\n\n      if (key === errorObject_1.errorObject) {\n        return this.destination.error(errorObject_1.errorObject.e);\n      }\n    }\n\n    var result = false;\n\n    if (this.hasKey) {\n      result = tryCatch_1.tryCatch(this.compare)(this.key, key);\n\n      if (result === errorObject_1.errorObject) {\n        return this.destination.error(errorObject_1.errorObject.e);\n      }\n    } else {\n      this.hasKey = true;\n    }\n\n    if (Boolean(result) === false) {\n      this.key = key;\n      this.destination.next(value);\n    }\n  };\n\n  return DistinctUntilChangedSubscriber;\n}(Subscriber_1.Subscriber);","\"use strict\";\n\nvar Observable_1 = require('../../Observable');\n\nvar from_1 = require('../../observable/from');\n\nObservable_1.Observable.from = from_1.from;","\"use strict\";\n\nvar Observable_1 = require('../../Observable');\n\nvar of_1 = require('../../observable/of');\n\nObservable_1.Observable.of = of_1.of;","\"use strict\";\n\nvar Observable_1 = require('../../Observable');\n\nvar merge_1 = require('../../observable/merge');\n\nObservable_1.Observable.merge = merge_1.merge;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _templateObject = _taggedTemplateLiteral(['\\n  height: 100%;\\n  background-repeat: no-repeat;\\n  transition: ', ';\\n\\n  opacity: ', ';\\n  filter: ', ';\\n  /* this is needed so Safari keeps sharp edges */\\n  transform: ', ';\\n'], ['\\n  height: 100%;\\n  background-repeat: no-repeat;\\n  transition: ', ';\\n\\n  opacity: ', ';\\n  filter: ', ';\\n  /* this is needed so Safari keeps sharp edges */\\n  transform: ', ';\\n']);\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _omit = require('ramda/src/omit');\n\nvar _omit2 = _interopRequireDefault(_omit);\n\nvar _styledComponents = require('styled-components');\n\nvar _styledComponents2 = _interopRequireDefault(_styledComponents);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _taggedTemplateLiteral(strings, raw) {\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar omitProps = (0, _omit2.default)(['blur', 'transition', 'isCached', 'isLoaded', 'opacity', 'scale', 'placeholder']);\n\nvar BaseComponent = function BaseComponent(_ref) {\n  var component = _ref.component,\n      children = _ref.children,\n      otherProps = _objectWithoutProperties(_ref, ['component', 'children']);\n\n  return React.createElement(component, omitProps(otherProps), children);\n};\n\nBaseComponent.displayName = 'BaseComponent';\nBaseComponent.propTypes = {\n  component: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string]).isRequired,\n  children: _propTypes2.default.node // Remind: There is not a children for Input tag.\n\n};\nvar StyledImg = (0, _styledComponents2.default)(BaseComponent)(_templateObject, function (props) {\n  return props.isCached ? 'none' : props.transition;\n}, function (props) {\n  return props.isLoaded ? 1 : props.opacity;\n}, function (props) {\n  return props.isLoaded ? 'none' : 'blur(' + props.blur + 'px)';\n}, function (props) {\n  return props.isLoaded ? 'none' : 'scale(' + props.scale + ')';\n});\n\nvar Img = function Img(_ref2) {\n  var component = _ref2.component,\n      image = _ref2.image,\n      style = _ref2.style,\n      otherProps = _objectWithoutProperties(_ref2, ['component', 'image', 'style']);\n\n  return React.createElement(StyledImg, Object.assign({}, otherProps, {\n    component: component\n  }, component === 'img' ? {\n    src: image\n  } : {}, {\n    style: Object.assign({}, style, component === 'img' ? {} : {\n      backgroundImage: 'url(\"' + image + '\")'\n    })\n  }));\n};\n\nImg.displayName = 'Img';\nImg.propTypes = {\n  // Internal\n  image: _propTypes2.default.string.isRequired,\n  isLoaded: _propTypes2.default.bool.isRequired,\n  isCached: _propTypes2.default.bool.isRequired,\n  // props\n  opacity: _propTypes2.default.number.isRequired,\n  blur: _propTypes2.default.number.isRequired,\n  scale: _propTypes2.default.number.isRequired,\n  className: _propTypes2.default.string,\n  transition: _propTypes2.default.string,\n  style: _propTypes2.default.object,\n  component: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func])\n};\nexports.default = Img;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n/**\n * Returns a partial copy of an object omitting the keys specified.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [String] -> {String: *} -> {String: *}\n * @param {Array} names an array of String property names to omit from the new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with properties from `names` not on it.\n * @see R.pick\n * @example\n *\n *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\n */\n\n\nvar omit = /*#__PURE__*/_curry2(function omit(names, obj) {\n  var result = {};\n  var index = {};\n  var idx = 0;\n  var len = names.length;\n\n  while (idx < len) {\n    index[names[idx]] = 1;\n    idx += 1;\n  }\n\n  for (var prop in obj) {\n    if (!index.hasOwnProperty(prop)) {\n      result[prop] = obj[prop];\n    }\n  }\n\n  return result;\n});\n\nmodule.exports = omit;","var _curry1 = /*#__PURE__*/require('./_curry1');\n\nvar _isPlaceholder = /*#__PURE__*/require('./_isPlaceholder');\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}\n\nmodule.exports = _curry2;","var _isPlaceholder = /*#__PURE__*/require('./_isPlaceholder');\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}\n\nmodule.exports = _curry1;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/* global Image */\n\n/* eslint consistent-return: 0 */\n\nvar isCached = function isCached(test) {\n  return test.complete || test.width + test.height > 0;\n};\n\nvar loadImage = function loadImage(src) {\n  return new Promise(function (resolve, reject) {\n    var image = new Image();\n    image.src = src; // Remind: Check if cached\n\n    if (isCached(image)) return resolve({\n      src: src,\n      isCached: true\n    });\n\n    image.onload = function () {\n      return resolve({\n        src: src,\n        isCached: false\n      });\n    };\n\n    image.onerror = function (err) {\n      return reject(err);\n    };\n  });\n};\n\nexports.default = loadImage;","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import _extends from '@babel/runtime/helpers/esm/extends';\nimport _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport _assertThisInitialized from '@babel/runtime/helpers/esm/assertThisInitialized';\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport invariant from 'invariant';\nimport json2mq from 'json2mq';\n\nvar MediaQueryListener = /*#__PURE__*/function () {\n  function MediaQueryListener(targetWindow, query, listener) {\n    var _this = this;\n\n    this.nativeMediaQueryList = targetWindow.matchMedia(query);\n    this.active = true; // Safari doesn't clear up listener with removeListener\n    // when the listener is already waiting in the event queue.\n    // Having an active flag to make sure the listener is not called\n    // after we removeListener.\n\n    this.cancellableListener = function () {\n      _this.matches = _this.nativeMediaQueryList.matches;\n\n      if (_this.active) {\n        listener.apply(void 0, arguments);\n      }\n    };\n\n    this.nativeMediaQueryList.addListener(this.cancellableListener);\n    this.matches = this.nativeMediaQueryList.matches;\n  }\n\n  var _proto = MediaQueryListener.prototype;\n\n  _proto.cancel = function cancel() {\n    this.active = false;\n    this.nativeMediaQueryList.removeListener(this.cancellableListener);\n  };\n\n  return MediaQueryListener;\n}();\n\nvar queryType = PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.arrayOf(PropTypes.object.isRequired)]);\n/**\n * Conditionally renders based on whether or not a media query matches.\n */\n\nvar Media = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Media, _React$Component);\n\n  function Media(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"queries\", []);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"getMatches\", function () {\n      var result = _this.queries.reduce(function (acc, _ref) {\n        var _extends2;\n\n        var name = _ref.name,\n            mqListener = _ref.mqListener;\n        return _extends({}, acc, (_extends2 = {}, _extends2[name] = mqListener.matches, _extends2));\n      }, {}); // return result;\n\n\n      return unwrapSingleQuery(result);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"updateMatches\", function () {\n      var newMatches = _this.getMatches();\n\n      _this.setState(function () {\n        return {\n          matches: newMatches\n        };\n      }, _this.onChange);\n    });\n\n    !(!(!props.query && !props.queries) || props.query && props.queries) ? process.env.NODE_ENV !== \"production\" ? invariant(false, '<Media> must be supplied with either \"query\" or \"queries\"') : invariant(false) : void 0;\n    !(props.defaultMatches === undefined || !props.query || typeof props.defaultMatches === \"boolean\") ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"<Media> when query is set, defaultMatches must be a boolean, received \" + typeof props.defaultMatches) : invariant(false) : void 0;\n    !(props.defaultMatches === undefined || !props.queries || typeof props.defaultMatches === \"object\") ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"<Media> when queries is set, defaultMatches must be a object of booleans, received \" + typeof props.defaultMatches) : invariant(false) : void 0;\n\n    if (typeof window !== \"object\") {\n      // In case we're rendering on the server, apply the default matches\n      var matches;\n\n      if (props.defaultMatches !== undefined) {\n        matches = props.defaultMatches;\n      } else if (props.query) {\n        matches = true;\n      }\n      /* if (props.queries) */\n      else {\n          matches = Object.keys(_this.props.queries).reduce(function (acc, key) {\n            var _extends3;\n\n            return _extends({}, acc, (_extends3 = {}, _extends3[key] = true, _extends3));\n          }, {});\n        }\n\n      _this.state = {\n        matches: matches\n      };\n      return _assertThisInitialized(_this);\n    }\n\n    _this.initialize(); // Instead of calling this.updateMatches, we manually set the initial state to prevent\n    // calling setState, which could trigger an unnecessary second render\n\n\n    _this.state = {\n      matches: _this.props.defaultMatches !== undefined ? _this.props.defaultMatches : _this.getMatches()\n    };\n\n    _this.onChange();\n\n    return _this;\n  }\n\n  var _proto = Media.prototype;\n\n  _proto.initialize = function initialize() {\n    var _this2 = this;\n\n    var targetWindow = this.props.targetWindow || window;\n    !(typeof targetWindow.matchMedia === \"function\") ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"<Media targetWindow> does not support `matchMedia`.\") : invariant(false) : void 0;\n    var queries = this.props.queries || wrapInQueryObject(this.props.query);\n    this.queries = Object.keys(queries).map(function (name) {\n      var query = queries[name];\n      var qs = typeof query !== \"string\" ? json2mq(query) : query;\n      var mqListener = new MediaQueryListener(targetWindow, qs, _this2.updateMatches);\n      return {\n        name: name,\n        mqListener: mqListener\n      };\n    });\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.initialize(); // If props.defaultMatches has been set, ensure we trigger a two-pass render.\n    // This is useful for SSR with mismatching defaultMatches vs actual matches from window.matchMedia\n    // Details: https://github.com/ReactTraining/react-media/issues/81\n\n    if (this.props.defaultMatches !== undefined) {\n      this.updateMatches();\n    }\n  };\n\n  _proto.onChange = function onChange() {\n    var onChange = this.props.onChange;\n\n    if (onChange) {\n      onChange(this.state.matches);\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.queries.forEach(function (_ref2) {\n      var mqListener = _ref2.mqListener;\n      return mqListener.cancel();\n    });\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        render = _this$props.render;\n    var matches = this.state.matches;\n    var isAnyMatches = typeof matches === \"object\" ? Object.keys(matches).some(function (key) {\n      return matches[key];\n    }) : matches;\n    return render ? isAnyMatches ? render(matches) : null : children ? typeof children === \"function\" ? children(matches) : !Array.isArray(children) || children.length // Preact defaults to empty children array\n    ? isAnyMatches ? // We have to check whether child is a composite component or not to decide should we\n    // provide `matches` as a prop or not\n    React.Children.only(children) && typeof React.Children.only(children).type === \"string\" ? React.Children.only(children) : React.cloneElement(React.Children.only(children), {\n      matches: matches\n    }) : null : null : null;\n  };\n\n  return Media;\n}(React.Component);\n/**\n * Wraps a single query in an object. This is used to provide backward compatibility with\n * the old `query` prop (as opposed to `queries`). If only a single query is passed, the object\n * will be unpacked down the line, but this allows our internals to assume an object of queries\n * at all times.\n */\n\n\n_defineProperty(Media, \"propTypes\", {\n  defaultMatches: PropTypes.oneOfType([PropTypes.bool, PropTypes.objectOf(PropTypes.bool)]),\n  query: queryType,\n  queries: PropTypes.objectOf(queryType),\n  render: PropTypes.func,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  targetWindow: PropTypes.object,\n  onChange: PropTypes.func\n});\n\nfunction wrapInQueryObject(query) {\n  return {\n    __DEFAULT__: query\n  };\n}\n/**\n * Unwraps an object of queries, if it was originally passed as a single query.\n */\n\n\nfunction unwrapSingleQuery(queryObject) {\n  var queryNames = Object.keys(queryObject);\n\n  if (queryNames.length === 1 && queryNames[0] === \"__DEFAULT__\") {\n    return queryObject.__DEFAULT__;\n  }\n\n  return queryObject;\n}\n\nexport default Media;","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}"],"sourceRoot":""}